{"pages":[{"title":"有的没的","text":"希望这次能坚持久一点。 建站历史 2021-12-13 把相册删了，因为我的图床挂了，而且感觉相册访问起来偏慢，影响了浏览体验（虽然也并不会有人看）。 2021-09-18 差不多是最累的一次更新了，让主题适配了blueimpgallery，因为感觉原来那个相册插件不怎么好看。 2020-09-04 哇，电脑重装之后又得搭一遍环境，好烦。 2020-08-27 字体加载有点问题，调优中…… 2020-05-26 调整minos配色及字体，如果你喜欢我修改的这个版本，欢迎fork。 2020-05-25 评论服务选用Valine。生成并提交sitemap以完成收录。 2020-05-24 完成初步搭建。主题使用minos，通过Travis CI完成自动化部署。","link":"/about/index.html"}],"posts":[{"title":"一次失败的刷剧经历","text":"虽然我很久不追剧了，但在这个1202年冬天我发现看个剧还是一件很难的事情。 之前gf想看《机智医生生活》第一季，因为这部剧没有引进，我自己的VPS当时还没做解锁导致Netfilx只能看自制剧，所以只能四处帮她找下载。找的过程中有一个感受，虽然追看韩剧的群体很庞大，但在国内看韩剧的体验实在不能算好，针对这部剧而言，我个人觉得最方便省心地观看方式还是通过Netflix，无论是画质还是翻译质量都有相当保障。但是国内看Netflix有多难大家都知道了，不仅需要购买DRM认证的专用设备（电视或电视盒），还需要解决机场或VPS搭建以及流媒体解锁等问题，对于只是想单纯刷剧，尤其是很多追剧党都是不太具备相关计算机知识的其他专业，基本上无人能在这一套折腾下坚持到成功收看。所以大部分人还是只能指望字幕组大善人通过发布资源的方式看剧。 字幕组发布的资源存在的一个最大问题就是画质。本身这种熟肉基本上都是内嵌字幕，注定要经过一轮压制，加上源本身可能不够高清，或者是考虑到小体积易于传播，所以画质会被压缩地更厉害。所以我一开始的思路想找一找外挂字幕，源则通过一些PT站的发布资源解决。果然PT上的资源画质相当不错，但另一个问题来了，外挂字幕有是有，但是和我下载的这个源匹配不上，这可如何是好。 我研究了一下手头上搜到的几个外挂字幕，一个是某国内字幕组为这部剧制作的ass字幕，这个字幕如果在我的plex上播放，需要经过一轮转换。由于plex的先天不足，转换后播放的速度会变得极慢，所以如果要用这个字幕，需要先进行一步ass转srt的工作。但由于这个字幕使用了特殊字体和一些特效，导致转换后的srt效果很差，再加上这个字幕时间轴本来也和我手头这个源不大对得上，所以还是pass掉了这个字幕。 第二个字幕是一个国内资源分享群发布的，惊喜地发现时间轴似乎是能对得上，但是前四集没有。完美主义发作下这个字幕也先搁置起来了。 第三个字幕是在国外网站上发布的一个Netflix源的字幕，我发现这个字幕似乎与第二个字幕一模一样，内容上唯一不同的是Netflix的字幕会在结尾标上译者的名字，第二个字幕可能是不想别人发现自己是直接拿来的，所以把这个信息给抹了（笑）。开始感觉离成功有点近了。 接下来要做的就是想办法怎么把时间轴对准确，但实在不想花太多时间用软件一个一个去校准，我大致对比了一下第三个字幕和第二个字幕，感觉第二个字幕有点像是把第三个字幕整体延迟了11秒左右，于是我的问题变成了有没有这样一个工具能够做到对srt的时间轴做整体的修改。结果还真发现了这样一个简陋的在线工具：subtitle-sync-shifter 当我做完字幕，以为这一切都尘埃落定的时候，现实又教我做人了。我坐在沙发度过了愉快的前20分钟，画质清晰，体验与Netflix相差无几，然而在二十分钟后，字幕开始对不上画面，每一句台词都开始先于角色出现在银幕钟。我意识到，之前那个国内资源分享群那个字幕应该还是有其独到之处的，至少它花了时间帮你做了时间轴的校准…… 痛苦，好像我要想好好看一下这部剧只能靠字幕组的内嵌字幕版本了。然而筛选各种版本的熟肉也让人纠结，有些字幕组喜欢夹带各种奇怪的片头，或者把字幕做得很大占据过多空间，虽然如此，我没有责怪他们的意思，只是觉得这么多人在为了看电视剧这件简单的事情付出了很多努力，但这件事本身不应该变得这么困难。 最后我还是回到了一开始的方案，通过流媒体解锁让我的Netflix节点能够观看自制剧意外的剧集，尽管gf在之前那次不成功的观看过后已经打消了继续看下去的念头，但我收获了一点欣慰，至少以后她如果再想看个什么，我可以有个相对稳定可靠的选项来满足她的需求。","link":"/2021/12/13/a-fast-and-easy-way-to-create-subtitles-for-some-TV-series/"},{"title":"栄冠は君に初代介绍","text":"棒球在中国的受关注程度一直以来都非常低迷，棒球游戏在国内的受众也相当有限。提起这一题材的游戏，在笔者的认知中，可能除了几款大联盟相关的棒球游戏，挖空脑袋能想到的，也就只剩下科乐美的实况力量棒球系列了但实际上，由于日本本土一直以来都具备深厚的棒球土壤，尤其在二战战败的影响下，日本民众对高中棒球的狂热更是达到前所未有的高度，因此以此为题材的游戏作品一直都层出不穷。这其中，代表作为A列车、侠客游系列的ARTDINK公司也开发过颇具特色的系列棒球模拟游戏——栄冠は君に。 熟悉日本高中棒球的朋友可以看出，栄冠は君に这个名字是ARTDINK取自高中棒球全国大会的会歌栄冠は君に輝く，截取了会歌歌名的前半部分。这个名称一方面直观地传达了本作是一款模拟甲子园大会的作品，另一方面在游戏开局选择球队的阶段，玩家也可以通过沿用这种命名法对校名进行修改从而增强真实感。这一实现实际上是基于无法在游戏中直接使用现实里的学校名称的考量，因此游戏中学校的名录虽然都来自于现实世界，但都是以一种“山寨版”的形式加以呈现的。游戏公司不能主动地把真实的学校名称加入游戏中，但如果由玩家自己修改游戏提供的山寨版校名，那么玩家在游玩时就可以代入实际存在的学校名称。这种暧昧的策略的运用，可以说是相当“日本”的一种擦边球做法了。 这个系列的初代于1990年发行在PC-9800，二代和三代则分别发行于1991年和1993年。后续也有零星续作登陆过PS系平台。续作的开发反映了这个系列的作品具备一定的人气。虽然市场相对小众，但也有其独到之处。本文主要对初代的玩法进行介绍，以期使读者感受到距今30年前个人家用电脑的玩家们游玩的体育模拟类游戏的风味。 初代的玩法相当简单：整个游戏的流程可以分为备战和比赛两大阶段。在备战阶段，玩家可以通过安排不同的训练指令提升棒球部员们的各项指标。备战途中，除了可以进行针对不同指标的练习外，还可以在固定的日期选择是否进行练习比赛。练习比赛有几率提升一些指标的数值，但也会增加大量疲劳，同时伴随着一些其他指标的下降。如果玩家手下的球员累计过多疲劳且不加处理的话，后续球员参赛的发挥也会受到很大影响。 备战阶段结束前，一般要确定参赛的正选和主将。正选可以从全部人选中确定，主将则只能在三年级学生里确定，被选为正选或主将的选手，自信和气力数值都会有一定上升。有意思的一点是，如果某一位置的正选没有从三年级学生中选择，而是从二年级或一年级中确定，那么该位置全部三年级学生的自信、气力会大幅下降。这也算是在强行还原东亚独有的这种前后辈关系吧。 备战阶段结束后，会根据抽签结果进入到预选赛阶段，这一阶段会决定球队能否进入全国大赛。本作在比赛途中，可以下达一些诸如代打、牺牲打、打带跑、多投或少投牵制球等由教练进行临场指挥的指令，一定程度上可以对战局产生影响。如果止步于地区预选赛，游戏会直接结束。但如果玩家通过了预选赛，就可以带领球队继续参加全国大赛，登上甲子园的球场。从某种意义上来说，这才是这个游戏的正式开始。 游戏对全国大赛的开幕仪式也进行了相当程度的还原。从球队入场，报校名再到奏会歌……各个流程都以过场动画的形式表现了出来。在后续的比赛中玩家可以发现，无论是场地的“豪华”程度，还是对观赛观众绘制的精细程度，相比预选赛时期都高出许多。制作组通过这种对比，反映了甲子园大赛之隆重，让人切实感受到在那个年代人们对于高中棒球的狂热不减的时代氛围。 从科学的眼光来看，单败淘汰制容易被太多偶然因素影响，在体现球队综合实力的这一点上，并不能算得上是一种特别合理的赛制。但当游戏中的球队历经艰辛，过五关斩六将，最终获得大赛最终的优胜的时候。相信即便是没有实际感知的玩家，也能够多多少少透过游戏体会到这种赛制，亦即甲子园的魅力所在。 这款游戏之所以会出现在我的视野中，是因为一个名为”Legend Pack”的炒冷饭企划，这以企划把ARTDINK旗下的两个系列以打包的形式在Steam上进行了发售，这其中就包括最开始提到的侠客游系列（Steam上的名称使用了原作的Lunatic Dawn）以及本文主要介绍的栄冠は君に系列。侠客游系列在Steam上除了可以通过这个捆绑包获取，也有单独的二代可以购买。当然，根据商店页面信息显示，实际的发行商已经不再是ARTDINK，而是另一家公司Degica。或许也正因如此，侠客游系列的二代前途道标（日文名为：ルナティックドーン 前途への道標，英文名则为：Lunatic Dawn : Passage of the Book）在商店页面的游戏截图显得非常敷衍，甚至还出现了将Windows的任务栏一同截取进游戏的介绍截图中的情况…… 撇开这些不谈，如果想免去一些寻找模拟器和游戏文件的麻烦或为单纯情怀补票，这个版本也是可以购买的。包内除了系列前三代的Windows复刻本体外，还收录了一些游戏的图片和音源供玩家品鉴。不过售价可能对只想浅尝辄止的玩家就不是很友好了，推荐大家在这个系列打半折时以40元的价格入手，80元的原价实在有些太高了。 有兴趣游玩这个系列初代的读者可以参考作者在B站发布的初代试玩视频。作者在游玩和撰写本文时，也大量参考了一名日本玩家为这个系列的初代及二代编写的详细的攻略，在此表示诚挚的感谢。 最后，让我们用初代的开场白结束这次回顾，也希望当年的游戏制作者们所期望传达的热情，能够穿越时空的隔阂，切实地传达给所有体验过本系列的玩家们。","link":"/2021/06/07/a-introduction-of-eikan-wa-kimi/"},{"title":"acme.sh的Verify error:Invalid response from报错","text":"之前在hostdare购入过一台VPS，速度一般，所以拿来做备胎，乱七八糟部了一些服务在上面，考虑到最低限度的安全，用acme给每个服务都手动生成了一遍证书，还挺麻烦的（当时因为一些原因，通配符证书没能用起来……）。 其中最常用的一个自用服务是freshrss，今天访问时突然发现证书过期了，按说acme是可以自动续期的。查了一下acme.sh.log，报了一条这个错误： 1[Mon Aug 24 00:09:56 CST 2020] yousite.xyz:Verify error:Invalid response from https://yousite.xyz/.well-known/acme-challenge/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx [*.*.*.*]: 404 说明acme是有在自动去更新证书的，但是到verify这一步时会通不过。查了一下，发现项目里面有一条issue：Verify error:Invalid response #132里有解答： 12345678910111213141516171819202122232425262728293031同样遇到这个问题，如果是nginx的话，一般是因为服务器拒绝访问，解决方法2个，都是为了获取访问权限：1.在include *.conf; 下方加入部分代码：server {listen 80;server_name yoursite.com www.yoursite.com;include *.conf; // 加入以下代码； location ^~ /.well-known/acme-challenge/ { default_type \"text/plain\"; root /home/wwwroot/yoursite; } location = /.well-known/acme-challenge/ { try_files $uri =404; } 2.在 yoursite.conf 中，把拒绝访问代码注释掉，如下： # location ~ /\\. # { # deny all; # } 我的nginx把各服务的配置单独放在了新建的\\etc\\nginx\\conf\\conf.d\\xxx.conf，所以这里location部分要放到xxx.conf下，后续要做的就是重新加载nginx的配置： 12cd /etc/nginx/sbin./nginx -s reload 为了验证配置是否生效，这里更新了一下acme之后做了一次证书手动更新。 123cd ~/.acme.sh/acme.sh --upgradeacme.sh --renew -d domain.com 这次签发成功了，于是又水了一贴（部分信息做了脱敏处理）……","link":"/2020/08/24/acme-verify-error/"},{"title":"给自己VPS的新服务新增证书","text":"我已经忘记为啥我这个站没法生成通配符证书了，现在每加一个应用就得重新生成一遍，还是挺折腾的，很容易忘记。我还是先把这个过程记下来吧。 先去购买域名网站的配置页面那里给这次想使用的子域名che.xxx.xyz更新一条DNS记录，DNS更新大概15到20分钟左右时间。 这次加的是chevereto这个图床应用，直接用官网的docker-compose.yml改一下分配的端口号，之后通过docker-compose up -d进行安装。 这时候还只能通过ip加端口形式访问，所以需要在nginx中加配置，把che.xxx.xyz这个域名配置成我在/home/wwwroot/下布好的一个静态网页。然后重启nginx服务让配置生效，好像用restart或者reload都行。 之后要用到acme.sh了： 123acme.sh --issue -d che.xxx.xyz --webroot /home/wwwroot/XXXacme.sh --installcert -d che.xxx.xyz --keypath /data/che.xxx.xyz.key --fullchainpath /data/che.xxx.xyz.fc.cer --reloadcmd \"service nginx reload\" 这两个命令分别做了生成证书以及把证书安装到指定位置，这次做的时候我把第二步给忘了，是手动拷贝过去改名字的，所以拷错了文件，加载配置时报了PEM_read_bio_X509_AUX这个错。所以还是用脚本吧。 证书部分完成后就是重新修改nginx的配置，这次得按照正式使用的场景进行修改，改完后还是同样需要让新配置生效。 nginx生效后，就可以通过https访问了。 后记：其实图床这个事情也和我搭静态博客的想法或者说理念有点冲突，实际是有人拿github直接做图床的，想了想还是不大好意思这么做。","link":"/2021/01/08/add-https-for-new-web-service-on-vps/"},{"title":"抖音自动点赞","text":"因为一些主播会把点赞达到多少万作为一项指标，自己又懒得点，所以想把这个工作给自动化。 现在可以搜到的实现基本都是基于adb的，这是一个简陋的整合了相关资料的win下的教学。 其原理为：直接使用adb的点击事件速度会不够快，可以通过记录用户操作再输出的方式模拟在dy主播界面快速点击的行为。 下载一个安卓模拟器（本文使用夜神模拟器）并安装，完成安装后在模拟器内安装dy，登录已经关注主播的抖音账号，并进入直播页面 通过命令行进入nox_adb.exe所在目录（命令为默认安装位置）：cd “C:\\Program Files (x86)\\Nox\\bin\" 进入夜神模拟器的adb shell：nox_adb shell 进入shell后，准备记录输入操作到一个新建的recordtap文件内：dd if=/dev/input/event5 of=/sdcard/recordtap，具体是event5或其他（如event1等）可在shell中通过getevent命令查询 回到模拟器的直播页面，在屏幕上重复快速点击 退出adb shell（如快捷键无效，可关掉命令行窗口后重开） 重新进入adb shell，直接写成一个死循环，运行命令： i=1; while [ i -gt 0 ]; do dd if=/sdcard/recordtap of=/dev/input/event5;sleep 5; done 多开时直接执行nox_adb shell会报 error: more than one device and emulator，这时需要先nox_adb devices查看当前有设备与模拟器： C:\\Program Files (x86)\\Nox\\bin&gt;nox_adb devices List of devices attached 127.0.0.1:62025 device 127.0.0.1:62001 device 在执行adb命令时，为命令指定设备的序列号nox_adb -s 127.0.0.1:62025 shell 说明： 使用夜神安卓模拟器的ADB指令时，需要将adb改为nox_adb，如nox_adb devices对应adb devices，nox_adb shell对应adb shell。 参考： https://www.jianshu.com/p/7c565eab821d https://blog.csdn.net/gaojinshan/article/details/9455193 https://www.yeshen.com/faqs/ByPpRoflZ","link":"/2020/11/16/douyin-auto-thumbup/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2018/05/23/hello-world/"},{"title":"如何解决智冠版天龙八部等繁体Windows老游戏在Win10下的乱码问题","text":"这个问题早已有之，早期的解决方案是安装AppLocale等软件进行转码，但上述软件目前在Win10环境下基本全部失效。 以智冠版天龙八部为例，在目前可以搜索到的相关资源贴中给出了两种解决方案： 方案一：修改配置文件，并“把XP到WIN10区域与语言切换到繁体” 方案二：使用游戏转码大师（见下图） 1234567方案一在每次玩游戏时都需要修改区域与语言，相当麻烦。方案二则有两个问题：一、这个软件年久失修，目前已经很难鉴别网络上可下载的版本中哪个是可靠的；二、笔者下载了诸多版本，在目前的Win10环境统统会报毒，于是没有再继续通过虚拟机或者沙盒尝试使用了，有兴趣的朋友可以试下。 因此这里介绍一个新的解决方案给有老Windows游戏游玩需求却又苦于乱码问题的玩家：使用Locale Emulater。 根据介绍，这个工具开发的目的主要是为了解决日文AVG在中文环境下游玩的乱码问题，但经本人实测对繁中版游戏的乱码问题也能完美解决。 该软件完成安装后，会在右键菜单中添加Locale Emulater选项，使用方式为右键游戏程序，在菜单中以此点击“Locale Emulater”、“修改此程序的配置”，会弹出下方窗口。 对繁中游戏，调整“预置配置”与“时区”即可，保存后可以通过“建立快捷方式”，将调整配置后的快捷方式生成到桌面，便于下次调用。 实测截图如下，Win10下可正常显示智冠版天龙八部，开始畅玩吧！","link":"/2020/12/08/how-to-solve-the-traditional-chinese-garbled-code-problem-of-old-windows-games/"},{"title":"Hyper-V使用记录","text":"更新：好消息是蓝叠出了兼容Hyper-V的版本，坏消息是这个版本在我的电脑上没用起来。 0. 起因终于对自己一直使用的旧笔记本到了忍无可忍的地步，于是今年3月份在做了各种调研后购入了新机器（Lenove S740, i5 16G版本）。装机过程中我为了偷懒，打算直接用Win10自带的Hyper-V。自己打的如意算盘是可以省得装其他虚拟机软件，也能试一试好不好用。 首先，因为需要一个Win环境的虚拟机去跑一些国产流氓软件（比如长年在后台挂一个QQProtect进程的QQ），所以我考虑新建一个LTSC版本的Win10虚拟机。 1这里有一点需要注意的是：Hyper-V给了第一代和第二代两种机器的选择。如果想传文件到第一代机器的虚拟机里，一种方法是通过设置局域网的共享文件夹，另一种好像是通过给虚拟机在硬盘上分一片虚拟硬盘的分区，两种方法都需要进行一些相对繁琐的操作和设置。所以除非需要用一些旧式驱动，一般用第二代机器就可以，因为二代机器支持增强对话，拷贝文件会比较方便且节省时间。 1. 第一个坑一般情况下我们装系统到新建的虚拟机，都是通过虚拟的DVD光驱加载从网上下载得到的镜像文件（ISO、DMG等）进行安装。只要在建虚拟机时勾选上使用镜像安装的选项并选好镜像，Hyper-V就会自动把DVD设备的启动顺序放在第一位（其他虚拟机软件VMWare/VirtualBox一般也是这样）。但是在实际安装最新版本的Win10 LTSC时，Hyper-V不是直接进入安装界面，而是显示提示内容如下的页面：1scsi dvd the boot loader failed 这说明通过DVD启动失败，没法进入镜像的安装界面。但本来这个DVD光驱就是一个虚拟设备，正常来说是不会有问题的。 google了半天才知道这里需要在虚拟机开机的时候用最快的速度按enter键才能进入系统安装界面（你也可以在开机时多按几次enter）。VMWare这一步是直接就进去了…… 2. 第二个坑除了需要一个隔离环境运行一些流氓软件，我还有一个需求就是用安卓模拟器看青你或者看口袋48直播。因为现在爱奇艺网站必须注册才能看它提供的所谓的“720P”的视频源，非常恶心，为了看这个“720P”只能采用通过模拟器到APP里去看。如果打开了Hyper-V功能，诸如雷电、蓝叠、mumu这类模拟器会无法使用。因为现在市面几乎所有安卓模拟器本质上都是VitrualBox架构的虚拟机，而VitrualBox会和Hyper-V冲突。这些软件一般也会被在自己的使用说明里提到要在Win下关闭Hyper-V才能正常使用。 那打开Hyper-V功能后就没法在机器上开一个安卓模拟器了吗？也是有替代方案的。要想在Hyper-V下同时使用安卓模拟器可以参考“使用 Windows Hypervisor Platform 配置虚拟机加速”。这个方案是通过安装Android Studio(国内需要改hosts），使用IDE自带的模拟器去模拟。实测下来Android Studio的这个开发用模拟器是可以在打开Hyper-V的同时运行的，显示效果和流畅度也不错，但很非常吃配置。S740运行过程中CPU占用率一直是100%，这意味着不到一分钟机器就要开始产生大量发热和噪声。可能更高配置的机器可以使用这个兼容方案，但在我这里这个方案宣告失败。 3. 第三个坑（严格说不是Hyper-V的锅）另一种方案是Hyper-V上装Android-x86的虚拟机。这一方案看上去很美好，但会碰到一些Android编译与开发环境的问题，难到了没有安卓经验的我。在安装镜像过程中，android-x86.org上的镜像基本上都试了个遍，有些镜像会出现键盘失效的情况，有些镜像能够正常安装，但安装完手机QQ或者微信并打开的时候，这些应用就一直弹停止提示，无法正常运行。google了下可能是由于大多数版本的Android-x86镜像基本不自带houdini的问题，导致微信、qq、口袋这些应用没法正常使用。 实在有点懒得继续再折腾。后来还试了试Win下的docker desktop，很流畅，但感觉用的人还是偏少，如果只是用来学习，应该还是基于Linux环境的讨论会比较多。 4. 小结说了这么多，我最后把Hyper-V关了，去装了一个VMWare。","link":"/2020/03/31/hyper-v-sucks/"},{"title":"聊聊Yoga S740","text":"后续：相当离谱，联想售后工程师在联想内部知识库找不到的触摸板驱动，我在联想美国官网找到了，虽然当时他们非说是免驱版（包括我自己查了一些联想国内官网的说明也说触摸板是免驱，但实际上这个美国官网的触摸板驱动装完后我的触摸板就好了……） 在没有考虑换机之前，我手上服役的机器还是一台13年购买的Dell Vostro系列。这台机器的硬盘、风扇甚至于键盘C面和D壳都已经被我换了个遍，可能就还剩屏幕没有动过。以为修修补补还可以坚持一段时间，但在数不清是第几次漏电之后，我终于还是受不了了。 决定购机之后，我开始分析自己的需求，大体有以下几点： 能做中度的视频剪辑和渲染 可以玩得动文明6或者欧陆风云4 内存16G，便于开虚拟机；硬盘512G起步 屏幕大小在14寸以内，厚度小于2cm 可以180度开合 接口不能太简陋，得基本够用 较长的续航 不要太贵（笑 …… 1中度的视频剪辑和游戏都对CPU有一定要求，不能太菜了，不然每次还得开远程连家里的电脑做剪辑，太麻烦。内存16G是为了能多开几个虚拟机。14寸以内也基本限定只能在轻薄本里挑。180度开合算是我个人一个喜好吧，我觉得这样摊开之后插显示器比较方便。 当时只是在脑海里粗略地列了一下，但基本是冲着这个方向去选机的。其实现在想想十分后悔，应该直接换Macbook Pro，本来Win系列本也已经用到有点吐了，但最后还是没有走出这一步，果然还是穷。 在各种奇奇怪怪的要求的引导下走进我视野的就是这台S740了。各种测评都有提到它的各种优点： 3733Mhz的板载LPDDR4X内存，算是当前市面上笔记本所使用的最高频内存了 一块DC调光、72%NTSC、400nits的屏幕，素质相当好，并且这块屏是LTPS的低功耗屏，搭配62Wh的大容量电池，续航表现很不错 使用10代CPU，性能释放表现好 满血雷电3接口，WiFi6无线网卡 那么实际上这台机器有没有各种测评说的这么好呢。从我自己的实际使用感受来看，这些优点是基本属实的。但这不意味着这台机器没有缺点了，事实上这台机器的缺点还不少： 首先，很不能让人忍受一点的就是这台机器的C面非常的尖锐，握持起来很不舒服。其次，机器的键盘手感并没有一些测评里吹的那么好，虽然不算特别差，但击键的时候有时会出现卡键的情况。另外这台机器的接口布局也不很合理，右边单独放了一个孤零零的USB，左边把电源口，雷电3接口，USB口和耳机口一股脑儿放在一起，使用时很拥挤。只配一个Type-C接口也显得很小气，多配一个把电源口砍掉不好么。 没有指纹解锁也是让人很费解的，我个人并不喜欢面部解锁，但因为这个原因也不得不用。 在7月份左右的时候，掉盘了。虽然这台机器的SSD表现其实还是挺不错的，但这么快就掉盘实在是出乎我的意料。没办法，只能联系联想上门维修。其实就是想着找它们免费换块盘。 等来了工程师上门，换完硬盘重装了系统，发现触摸板又不工作了……一般这种情况我们都会想着去找驱动装上，结果联想自己的官网上找不到相关的驱动。这位联想工程师联系了自己的同事，说这款机器触摸板是免驱的，装上系统就能使用。结果他自己带来的系统又怎么装都不行……最后这位小哥问我之前的一次重装时用的是什么镜像，说要不你自己重装试试。弄得我也无语了…… 后来的解决方案是把我的机器拿回了维修站，重装了一次出厂系统。触摸板的问题总算解决了。但给我的感受就是联想内部管理挺混乱，虽然看起来他们自己有做移动端的知识库系统，但对自己新推的新机型的支持明显滞后。包括一开始这位工程师想用PE进去机器看一看硬盘情况，结果发现自己的PE在这台机器上无法使用，换了好几套才进去，也给人感觉对新机型不熟悉。这次售后算是解决了问题，但体验还是很糟糕的。包括这台机器本身也给人一种不安定感。 现在我也还在坚持用这台机器，因为这些缺点的存在，抵消了我对它优点的好感。用起来总是觉得不怎么舒服。并且因为触摸板的缘故，我现在只能继续用工作站重装的Win10家庭版，实在是痛苦。现在看来，最大的感悟可能就是：下次换机我不会再想着省钱了。","link":"/2020/09/04/lenovo-yoga-s740-review/"},{"title":"信野15pk吐槽","text":"聊聊印象比较深的几个点： 破局对这个系列来说弱小势力破局最重要的永远是抓人。本作抓人大概有三种方式，一是破城后守城武将有几率被登用，二是高智武将和其他势力武将密谈（六个月内可以对其下达叛变指令）。第一种在碰上各种家族势力大名时基本没用，第二种需要智略高的武将才有较好效果，并且费钱，前期又比较缺钱。第三种是传统的灭掉某一家接受其班底。 基本上个人感觉在前期可以当第一二种方式不存在，想要抓人就要好好思考如何快速灭掉一家。本作在这一点上算比较友好：只要维护好外交关系，就可以比较轻松的请求到大势力的援军。 我第一次玩时开的是一局上级剧本一的秋月家，虽然被大友大内夹在中间，其他的小大名据点比较多体量也比较大，环境比较差，但只要看准机会一战而定，也能够相对轻松地破局，而在其他各作中的初见中能完成这个任务，难度感觉还是要大不少。 隐居这次隐居不像之前的几作只能满足一下历史代入感，终于开始有实际的用途了。因为志和大命系统的存在，历史上比较著名的大名们能够有条件触发一些buff。但这一点对小大名就不那么友好了，因为小大名往往给的都是一些比较聊胜于无的buff。 这时候如果想要换掉自势力的志，可以通过隐居换人的方式。但传给自家弱鸡的兄弟或子女，依然是相对弱鸡的志。如果想使用更强力的志，一种方法是通过结婚后隐居，把继承者选为娘家人。 例如：和浅井家的姬结婚后选定浅井长政接任，就可以使用他的湖北仁义这个志。绝嗣后换人我没有试过，因为本作的寿命设定为标准时，武将都可以活到吓人的年纪，经常有八九十岁老人还五维不减勇冠三军的情况出现。 合战这次的合战有个非常魔幻的设定就是战场上限。相信这是光荣为了强行还原历史以少胜多的战例同时参考其他游戏及资料加入的一个设定。应该说这个设定本身也没太大问题，很多战争类游戏都有类似的设定比如战场宽度等。 但光荣的这个战场上限是强行砍掉上限之外的兵力，如果战败，剩下的兵力会被视为一同战败而不是继续上阵……这一点总让人有些迷惑，在这个设定下，后期经常会出现二十万大军兵临城下但只能上几千人的场景，最搞笑的是这几千人如果打输了，剩下的十几万人就会强制结算损失兵数，基本相当于全无抵抗被杀到一败涂地作鸟兽散，这合理吗？ 内政与守城本作的内政基本上是机械的点点点，非常无趣。天守的修筑的模式其实还挺有意思的，但是本作守城基本守不住，导致这部分的建设也没有什么意义，丧失了很多本应该拥有的乐趣。 结语最后还有一点想吐槽的，本作的剧本似乎需要通过完成不同模式下剧本来解锁。这强行延长游戏时间的做法也是相当无耻。虽然个人感觉本作并没有特别不好玩（也可能是因为我正好没有玩过前作的原因）。但我能明白系列玩家对本作的不满的确不是空穴来风，可能唯一还能夸夸的，就是本作越看越耽的美人立绘了（笑","link":"/2021/02/15/nobu15pk-review/"},{"title":"使用用户脚本将Flash播放器替换为HTML5播放器","text":"做这个东西的动机其实是为了刷48的公演直播，本来一直在b站上看是没有问题的。但看这个月的n队N.E.W公演的那天，b站不知为何没有直播源了…… 也来不及搞清楚没有源这个事情是不是又是丝芭想搞闭环，总之当时除了模拟器登口袋，好像电脑上刷直播的方法就只剩在live.48.cn上看。 然后live48不出意料地还在用flash，我的火狐进去之后就是一块白板。虽然最后临时用CentBrowser刷了一下公演，但毕竟不是我的主力浏览器，刷完之后就莫名地感觉不爽…… 扒了扒greasefork，这方面脚本还是比较多的。找了一个用了dplayer的脚本dilidili flash to html5 fix开始抄。抄的过程中就感觉：如果只考虑满足最基本的需求，基本上还在使用Flash播放器的视频站都可以采用这个思路通过加载用户脚本做h5播放器的替换。 开始： 在head或者body加载dplayer的类库和hls的类库。 触发window.onload后，清空原播放器div下的子元素，append一个新div进去用于新播放器的使用。 写一个dplayer的构造函数，配好从原页面提取的视频url、视频类型为hls等配置项即可。 最后的结果可见live48 html5 player。","link":"/2019/04/29/replace-the-flash-player-with-an-HTML5-player/"},{"title":"restic使用onedrive的贴士","text":"太长不看版：推荐使用restic提供的offical binary自己编译。 我们在通过docker使用Bitwarden之类的应用时，一般会把它的数据库等等文件挂在到本地的一个位置，这时候可以通过restic来备份VPS上的这部分数据到网盘，既有加密又有快照恢复，使用resitc就是看中了这些功能。 但在使用过程中也还是不出意外地出现了各种问题，这里记录一个我自己最开始碰到的：我希望通过restic将挂载出来数据备份到我自己的onedrive里。现在restic的onedrive备份需要通过rclone。rclone连接onedrive是没有问题的,但在执行restic -r rclone:onedrive:Backup init（onedrive、Backup分别为我自定义的remote和folder名）时会报Fatal: create repository at rclone:onedrive:Backup failed: invalid backend错误。 如果这是一个invalid的backend，那么说明我们rclone的连接有问题，rclone lsd: onedrive应该是不能正常显示目录结构的，但实际经过测试没有发生这个情况。 最后爬restic的论坛发现了同样问题的一个讨论贴：restic-with-rclone。solution的这位老兄为了解答还去搜了源码，发现如果确实是restic -r rclone:onedrive:Backup init这个命令的形式，执行时会无法通过打印”invalid backend”的这条报错信息的判断条件，所以当前版本执行这一命令不会出现问题，有可能是restic版本过时。 两相对照后，我发现我当时也是无脑apt-get install resitc了，没有考虑到现在VPS上的系统版本是UBuntu的LTS版本。导致我在VPS安装的restic的这个版本是0.8.3，而根据讨论贴里的信息，restic在0.9.0版本里才加入rclone支持。 因此需要重装一下restic，我的步骤是先根据go主页的Download and install安装好go环境，之后再通过wget https://github.com/restic/restic/releases/download/v0.12.0/restic-0.12.0.tar.gz下载官方的包，解压后再执行make去编译。编译完成后生成的可执行的restic文件就可以正常使用了。 如果需要配置定时任务，可以用crontab或者systemd。crontab的话可以先把RESTIC_PASSWORD=\"here is your password\"加到~/.bashrc或者~/etc/profile里，之后在crontab -e添加任务配置：10 4 * * * . ~/.bashrc; /home/user/restic-0.12.0/restic -r rclone:onedrivedb:Backup backup /home/user/data; /home/user/restic-0.12.0/restic forget -q --prune --keep-hourly 24 --keep-daily 7","link":"/2021/03/30/restic-onedrive-tip/"},{"title":"我搭静态博客","text":"动态博客其实一直以来都很吸引我。事实上不久之前，我还在自己的VPS上搭建了最近比较火的halo。域名、证书签发、反代的配置等等都做好了。但经过一系列的折腾，最后还是回来重新使用github page。 做出这个决定有一个重要的理由——动态博客真的贵：好的域名需要钱，线路流畅的VPS也需要钱。廉价VPS服务商的线路一言难尽，我的目的也仅止于记录自己的一些想法和兴趣，不会有更大的野心。因此权衡下来我更倾向于选择一个具有性价比的方案。 话虽如此，并不代表静态博客就完美无缺。相反，一些在动态博客中根本不能称之为问题的问题，在静态博客上就得通过各种“奇技淫巧”来解决。 因此本文基于hexo聊一聊在搭建过程中需要注意的点，同类型的生成器如pelican在使用中基本上围绕的也都是这些问题。 自动化部署现在流行的做法通过Travis CI自动部署github page，基本上都遵循如下步骤： 新建一个username.github.io仓库，在github的Settings - Developer settings - Personal access tokens页面内为Travis CI新建一个github page专用，并赋予repo权限的access token； 使用github账号登陆Travis CI以完成账号关联，将access token作为GH_TOKEN加入到从github同步过去的仓库配置中，并在Travis CI中启用该仓库。 在本地安装npm、hexo。初始化hexo项目后，为本地项目添加.travis.yml，并完成_config.yml、.gitignore等相关配置； 为username.github.io新建一个source分支，将本地项目推送到这个source分支下。最终目的是让Travis CI根据source分支下.travis.yml中的设置的步骤生成静态文件，并把静态文件推送到username.github.io的master分支下。 这部分的教程其实相当多了，如1。在实际搭建时，可以根据自己的情况进行调整，并不需要照搬教程。 主题开发如果你使用了比较成熟的主题，但又希望做一些个性化的定制，比较好的一种方式是把这个主题fork到自己的github账号下。并在本地环境中拉取fork的主题。这样做之后，本地的开发环境将会有两个仓库： username.github.io的source分支 hexo-theme-themename的master分支 由于主题是一个独立分支，因此在自动部署时，一般会把source下的themes文件夹加入到这个分支的.gitignore里去，避免发生一些可能的修改冲突。 使用时，则通过在.travis.yml添加git clone命令引入主题并渲染，例如： 1234567before_script: - npm install -g hexo-cli - mkdir themes - git clone https://github.com/username/hexo-theme-themename.git themes/themenamescript: - hexo generate 评论服务选型对动态博客来说几乎属于标配的评论功能，在静态博客上就得通过各种奇奇怪怪的方案去实现，并且往往还并不完美。我目前使用的主题minos支持的几种评论服务，就各自存在一些缺点： disqus国内网络环境下的访问实在是太慢了，非常影响浏览体验。 一种方式是把disqus隐藏在一个按钮中，相当于用户只有在点击该评论按钮后才会加载disqus，属于一个治标不治本的方案。 如果坚持使用disqus，可以考虑参考2，但我个人感觉还是会有拖慢。 gitment/gitalk单独为这类评论服务建一个存放issue仓库倒还不是最麻烦的地方，最麻烦的是每篇博文好像都得手动加issue，虽然github也有网友写了脚本完成这一工作，但易用性还是大大降低了。 另外gitment已经停止更新，一些常见问题如object XMLHttpRequestProgressEvent、hexo上的开启失败等只能通过网友提供的各种方案加以解决，这一点也十分劝退我。 isso使用体验最好的一个，但并没有选用他。这实际上涉及的是一个理念问题：isso需要自行搭建，也就是说又得放在VPS上，那为什么不直接选用一个自带评论的动态博客方案呢，和我搭静态博客的出发点相矛盾。当然，对于不介意这点的朋友，这个服务还是推荐的。 valine目前这个博客上部署的方案，没有上面一些比较恶心的问题。但leancloud这个服务能坚持多久是比较让我担心的地方…… 综上所述，可以看到静态博客的评论实在是一大痛点。虽然有各种各样的解决方案，但始终只能算马马虎虎能用，难以达到动态博客的使用体验。 搜索引擎收录及SEO优化目前google的网址前缀收录的推荐方式是通过校验html来完成，步骤可参考5，SEO优化方面的文章也很多，如6，这里就不再赘述了。 小结完成这些内容后，你的静态博客相当于拥有了基本的功能。后续包括全站多语言支持、图片懒加载等等，都是可以持续优化的方面。 当然，对于一个博客来说，最重要的永远是内容。希望大家不要被各种花俏的技巧蒙蔽了双眼，为了搭博客而搭博客。而是通过搭博客培养兴趣和动手能力，在兴趣驱动下，继续分享自己的思考与创意😁","link":"/2020/05/27/the-way-I-build-a-static-blog/"},{"title":"Dominions5联机新人局回顾","text":"发在trow上的一份算是战报一样的东西吧，也是第一次完整的打完一局Dominions5的联机，存个档防止没了。 正文大家好，我是本局的Caelum，我从自己的视角写了一点对howfar局回顾的流水账，以帮助大家了解整场的进程，一些细节可能有记忆上的出入，或者有描述上不妥的地方，请大家直接指出来。 另外也引流一下包子（Atlantis）的详细战报，囊括了更多的细节以及规划、对抗的思路：https://trow.cc/board/showtopic=50295😋 前期howfar局开始不久后就大事件频发，包括讨论群内被大家津津乐道的Jomo5t开荒10地的强势表现（直接引发了箱Jomo联盟），以及C’tis开荒失败并被Lemuria乘势进攻。此后没过多久就发生了箱Jomo联盟参与国Abysia的ai，一定程度上成为了后续箱Jomo进入拉锯的原因。进入中期后，Patala逐渐走出前期开荒不利的困境，但并没有刻意与他国维持良好的外交关系，因此邻国Ragha、Caelum和Lemuria建立了箱Patala联盟，希望能够从对Patala战争中获利。 中期随着时间进展，这两个包围网也走向了截然不同的结果：箱Jomo联盟在前期优势的情况下却因为一系列的阴差阳错(这里可以参见前面提到的包子的战报，有详细的描述）逐渐被Jomo扭转局面，Ulm和T’ien Ch’i都遭到了较大战损；而箱Patala联盟由于参与的Ragha、Caelum、Lemuria前期实力保存完整，使得Patala面临较大压力。虽然初期面对Patala的军队Caelum遭遇大败，但最后Lemuria拿下了Patala首都，Patala孤立无援，无力继续对抗三国，最终丢失全部地盘。Lemuria在此战中获利较多，且邻国Abysia和C’tis一个ai，一个困守一地，无法对其造成实质性威胁。在宽松的生存条件下，Lemuria通过宝石外交渡过了经济困难时期，并结合本国的刷兵优势，逐渐发育成为了游戏中局最大的boss。 后期箱Jomo联盟节节败退，T’ien Ch’i无力继续进攻，Ulm玩家ai。Jomo虽然击退强敌，但由于一直被他国针对，亟需修养生息。其他国家则限于前期相互间签订了过多nap，也陷入发展的困局。然而此时Lemuria的体量仍在不断增大，Atlantis玩家开始意识到Lemuria已经不可处理，再加上本局是60回合灭世，届时将无人能够挑战Lemuria，Lemuria的登神已经进入实际上的倒计时。 于是箱Jomo联盟停战，以Atlantis为首，剩余的Jomo、T’ien Ch’i、Ragha、Caelum国家紧急加入生者联盟对抗亡者。Lemuria为应对整场游戏中最大的危机，也祭出反制，开启全球结界时光重担。前线的鸟人系国家Ragha和Caelum的实力大幅削弱，一时间生者希望全都寄托在了Atlantis的身上。 此时游戏也进入了白热化阶段，前线的Caelum、Ragha投入几乎全部兵力进行骚扰，而Jomo和T’ien Ch’i集中各种物资开始量产各种魔法道具，生者中目前实力最强的Atlantis玩家则率大军兵临Lemuria城下，并投入大量精力进行测试，以求在对Lemuria的决战中取胜。虽然生者绞尽脑汁，但正面的两场大战中，Atlantis和Caelum仍然败倒在Lemuria的压倒性实力下，Lemuria承受了一定战损，但整体的实力没有动摇。尽管如此，在重担和灭世的双重压力下，生者几乎毫无保留的轮番冲击还是让Lemuria感受到了一定压力。Caelum和Ragha不断通过骚扰和Lemuria主力捉迷藏，Jomo集结龙王和泥人逐步进逼Lemuria北方的王座。Atlantis则在初战失败后再次集结起一支依靠共联的有威胁部队威胁Lemuria南方的王座。生者依靠游走战术蚕食Lemuria领地，最终Atlantis抓住一次机会攻下Lemuria南方王座，而这时距离最后的灭世也仅剩个位数回合了。 Atlantis拿下了Lemuria的王座，但Lemuria主力尚存，随时能够反攻，因此Atlantis提出执行生者联盟初期战略构想的B计划，即将王座集中在一个玩家手中死守并等待灭世，希望通过王座点的领先获取胜利，这就涉及到更加复杂的规划。游戏进行到此，大家的共识几乎都是疲惫战胜了乐趣。双方都小心翼翼，反复推演测试，这占用了玩家们较多的时间和精力，因为稍有不慎就会满盘皆输。这种身心上的疲劳感伴随着llamaserver故障有所缓解，但大家都明白问题只是暂时被搁置了起来。并且此前有部分玩家参与了新局，精力上也开始分散，烂局的想法有所蔓延。终于Jomo向Lemuria提出在决战后一起ai，Lemuria可能是考虑到取胜需要付出的场外代价太大便同意了Jomo的提议。但由于Jomo误以为ai的当回合可以发出移动命令，导致ai后的Jomo主力在电脑的指挥下并没有如期前往约定地点与Lemuria决战。虽然Jomo失约，但Lemuria还是履行了约定ai。生者们坚持到了最后，但也随即意识到将要面临兄弟阋墙的现实。 尾声在生者获得胜利后，T’ien Ch’i也以ai的方式退出游戏，此时参与的玩家只剩下Atlantis、Ragha和Caelum。由于时光重担依然存在，并且鸟人系国家没有驱散的方式，因此Atlantis成为这一阶段实力最强的一国。游戏正式进入灭世，horror每回合都屠杀大量玩家的法师，各国领土的unrest也因为horror事件不断增加。ai的各国由于游戏难度机制仍然保持着良好的经济能力，不断依靠火星兵侵扰玩家的领地。Caelum因为位置和前期作战积累的优势，最高时坐拥4王座点。但好景不长，Caelum家中王座不断被horror攻打，由于缺乏防守王座的能力，最终三个王座被全部拆光，王座点归零。而这时Atlantis仍然保有两个王座。在灭世情境下，为了取胜，Atlantis对Ragha及Caelum的进攻成为必然，同时Atlantis也在尝试拆除二级王座the iron throne。 可以说直到此时Atlantis仍然占据较大优势，并且Atlantis受时光重担影响较小，仍有余力调度部队向各路出击。Caelum和Ragha则早已无法发挥部队飞行优势，单位不断老死病死，实际上已无法正面对抗Atlantis的军队，唯一对鸟人系国家的利好是大家都没有了神和先知，即使被Atlantis拿下王座，一时间也无法宣称。 被ai和Atlantis夹击且在经济上也遭遇维护费困境的Ragha决定调动主力帮助Caelum拆掉一直Caelum一直未能处理的三级王座the throne of eternal suffering。于是游戏变成了双方的赛跑：Caelum将多余的宝石全部用来炼金，并利用此前只是为了不想浪费w宝石而召唤的sea king下海建实验室召唤通用三级牧师bishop fish，为宣王座做准备。Ragha用最后的zhayedan玉碎great mother坐阵的the throne of eternal suffering后ai，留下一些宝石遗产给Caelum。Atlantis则调动法师逼近最后的三级王座。Caelum在Ragha玉碎后集结全部单位进攻，尽管损失了大量法师但最终拿下了关键的三级王座。此时胜利点要求已经在horror的不断拆迁下降到了4点。 Caelum在Ragha的帮助下终于从绝望中看到一丝胜机，但残酷的现实是Atlantis的法师已经逼近Caelum，随时可能发起进攻。Caelum部队兵力接近枯竭，无法冒险分兵偷取其他王座，陷入困守的被动境地。Atlantis连续两轮分别派出wight mage和angakok消耗Caelum兵力，Caelum虽然防守成功，但在wind of death的摧残下战斗法师群损失殆尽，只余下一个yata和一个wight mage，正面部队也所剩无几，甚至只能让剩余的少量iron crafter装备起moon blade投入作战。 最后的第73回合，Caelum方算上所有法师与部队约40余单位死守三级王座。而Atlantis调集的是一支近90单位ice guard携wight mage和angakok的部队，继续向Caelum的王座发起进军。这时距离Atlantis的部队到达the throne of eternal suffering仅有一格之遥，同时Atlantis召唤的bishop fish宣称了此前在Ragha境内拿下的王座the throne of high。只要拆掉Caelum手中的王座，Atlantis就可以奠定胜局。但最终灭世成为决定游戏结局的关键因素，Atlantis刚刚宣称的王座the throne of high在回合内被horror无情地拆除，Caelum最终幸运地获得了胜利。 小结这是我第一次参加Dominions5的邮件联机局，我想用三个关键词来概括： 幸运：诚实地说本场游戏无论是知识的积累还是对机制的理解，参赛的大家水平都比我高。因此在最后如果没有Ragha站出来帮助我，又或者horror拆掉的是我防守的王座，恐怕howfar局就会是另一个结果。 协作：Dominions从结果上看是一个零和游戏，玩家间免不了出现相互算计的情况。但是玩家也应该意识到，在过程中，如果大家目标一致，就应该放下猜忌团结协作，这样才能达成共赢。 坚持：Dominions联机像一场长跑，可能大家碰到坚持不下去的情况会想要烂掉，这也是人之常情。但说得鸡汤一点，如果坚持下去，也可能会发生意想不到的结果。这可能也是开赛者饼公希望我们能够切身体验的主题之一。 最后我想说的是，真的非常推荐常年单机的新手尝试联机。Dominions联机的游玩体验和单机大不相同。联机中风云变幻的局势可以倒逼玩家主动学习提高游戏水平，希望已经入坑的大家有机会都能感受到Dominions联机的魅力与乐趣，也欢迎更多新玩家尝试游玩Dominions系列😄 终场数据：","link":"/2021/09/22/gameplay-review-how-far-will-you-go-for-dom/"}],"tags":[{"name":"TV-Series","slug":"TV-Series","link":"/tags/TV-Series/"},{"name":"subtitle","slug":"subtitle","link":"/tags/subtitle/"},{"name":"ARTDINK","slug":"ARTDINK","link":"/tags/ARTDINK/"},{"name":"PC-9800","slug":"PC-9800","link":"/tags/PC-9800/"},{"name":"koushien","slug":"koushien","link":"/tags/koushien/"},{"name":"VPS","slug":"VPS","link":"/tags/VPS/"},{"name":"android","slug":"android","link":"/tags/android/"},{"name":"RPG","slug":"RPG","link":"/tags/RPG/"},{"name":"Virtualization","slug":"Virtualization","link":"/tags/Virtualization/"},{"name":"Hyper-V","slug":"Hyper-V","link":"/tags/Hyper-V/"},{"name":"Laptop","slug":"Laptop","link":"/tags/Laptop/"},{"name":"Koei","slug":"Koei","link":"/tags/Koei/"},{"name":"SLG","slug":"SLG","link":"/tags/SLG/"},{"name":"Userscript","slug":"Userscript","link":"/tags/Userscript/"},{"name":"Hexo","slug":"Hexo","link":"/tags/Hexo/"}],"categories":[{"name":"Media","slug":"Media","link":"/categories/Media/"},{"name":"Game","slug":"Game","link":"/categories/Game/"},{"name":"Coding","slug":"Coding","link":"/categories/Coding/"},{"name":"Digital","slug":"Digital","link":"/categories/Digital/"}]}