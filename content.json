{"pages":[{"title":"有的没的","text":"更新历史 2022-04-21 新增了一个本主题下如何使用blueimpgallery的示例。 2022-01-19 加个统计。 2021-12-13 把相册删了，因为我的图床挂了，而且感觉相册访问起来偏慢，影响了浏览体验（虽然也并不会有人看）。 2021-09-18 差不多是最累的一次更新了，让主题适配了blueimpgallery，因为感觉原来那个相册插件不怎么好看。 2020-05-26 调整minos配色及字体，欢迎fork这个版本。 2020-05-25 评论服务选用Valine。生成并提交sitemap以完成收录。 2020-05-24 完成初步搭建。主题使用minos，通过Travis CI完成自动化部署。","link":"/about/index.html"},{"title":"相册使用说明","text":"本博客主题在原minos主题上进行了一些改动，因此相册的显示效果与原主题有所不同。 使用例配置文件12345678910111213141516171819202122232425262728293031favicon: /images/favicon.icomenu: Archives: /archives Categories: /categories Gallery: /gallery About: /aboutarticle: # Show word count and estimated reading time. readtime: true # Code highlight theme, please see https://highlightjs.org/static/demo/ highlight: atom-one-dark logo: text: mykonakonanavbar_links: RSS: icon: fas fa-rss url: https://mykonakona.github.io/atom.xmlsearch: type: insight# Other plugins and their settings.plugins: mathjax: true katex: false gallery: true clipboard: true 相册页source下新建一../gallery/index.md文件，输入以下内容： 1234567891011---layout: \"blueimpgallery\"comments: false---&lt;div id=\"links\" class=\"links\"&gt;&lt;a href=\"https://che.jakku.top/images/2021/09/17/IMG_20210808_174117.jpg\"&gt;&lt;img loading=\"lazy\" width=\"105\" height=\"105\" src=\"https://che.jakku.top/images/2021/09/17/IMG_20210808_174117.th.jpg\" alt=\"IMG_20210808_174117.th.jpg\" border=\"0\"&gt;&lt;/a&gt;&lt;a href=\"https://che.jakku.top/images/2021/09/17/IMG_20210808_174124.jpg\"&gt;&lt;img loading=\"lazy\" width=\"105\" height=\"105\" src=\"https://che.jakku.top/images/2021/09/17/IMG_20210808_174124.th.jpg\" alt=\"IMG_20210808_174124.th.jpg\" border=\"0\"&gt;&lt;/a&gt;&lt;a href=\"https://che.jakku.top/images/2021/09/17/IMG_20210808_174135.jpg\"&gt;&lt;img loading=\"lazy\" width=\"105\" height=\"105\" src=\"https://che.jakku.top/images/2021/09/17/IMG_20210808_174135.th.jpg\" alt=\"IMG_20210808_174135.th.jpg\" border=\"0\"&gt;&lt;/a&gt;&lt;a href=\"https://che.jakku.top/images/2021/09/17/IMG_20210808_174144.jpg\"&gt;&lt;img loading=\"lazy\" width=\"105\" height=\"105\" src=\"https://che.jakku.top/images/2021/09/17/IMG_20210808_174144.th.jpg\" alt=\"IMG_20210808_174144.th.jpg\" border=\"0\"&gt;&lt;/a&gt;&lt;/div&gt; 效果","link":"/gallery/index.html"}],"posts":[{"title":"一次失败的刷剧经历","text":"虽然很久不追剧了，但直到1202年的这个冬天我发现看个剧还是一件很难的事情。 背景之前gf想看《机智医生生活》第一季，因为这部剧没有引进，我自己的VPS当时还没做解锁导致Netfilx只能看自制剧，所以只能四处帮她找下载。找的过程中有一个感受，虽然追看韩剧的群体很庞大，但在国内看韩剧的体验实在不能算好，针对这部剧而言，我个人觉得最方便省心地观看方式还是通过Netflix，无论是画质还是翻译质量都有相当保障。但是国内看Netflix有多难大家都知道了，不仅需要购买DRM认证的专用设备（电视或电视盒），还需要解决机场或VPS搭建以及流媒体解锁等问题，对于只是想单纯刷剧，尤其是很多追剧党都是不太具备相关计算机知识的其他专业，基本上无人能在这一套折腾下坚持到成功收看。所以大部分人还是只能指望字幕组大善人通过发布资源的方式看剧。 字幕组发布的资源存在的一个最大问题就是画质。本身这种熟肉基本上都是内嵌字幕，注定要经过一轮压制，加上源本身可能不够高清，或者是考虑到小体积易于传播，所以画质会被压缩地更厉害。所以我一开始的思路想找一找外挂字幕，源则通过一些PT站的发布资源解决。果然PT上的资源画质相当不错，但另一个问题来了，外挂字幕有是有，但是和我下载的这个源匹配不上，这可如何是好。 问题我研究了一下手头上搜到的几个外挂字幕，一个是某国内字幕组为这部剧制作的ass字幕，这个字幕如果在我的plex上播放，需要经过一轮转换。由于plex的先天不足，转换后播放的速度会变得极慢，所以如果要用这个字幕，需要先进行一步ass转srt的工作。但由于这个字幕使用了特殊字体和一些特效，导致转换后的srt效果很差，再加上这个字幕时间轴本来也和我手头这个源不大对得上，所以还是pass掉了这个字幕。 第二个字幕是一个国内资源分享群发布的，惊喜地发现时间轴似乎是能对得上，但是前四集没有。完美主义发作下这个字幕也先搁置起来了。 希望第三个字幕是在国外网站上发布的一个Netflix源的字幕，我发现这个字幕似乎与第二个字幕一模一样，内容上唯一不同的是Netflix的字幕会在结尾标上译者的名字，第二个字幕可能是不想别人发现自己是直接拿来的，所以把这个信息给抹了（笑）。开始感觉离成功有点近了。 接下来要做的就是想办法怎么把时间轴对准确，但实在不想花太多时间用软件一个一个去校准，我大致对比了一下第三个字幕和第二个字幕，感觉第二个字幕有点像是把第三个字幕整体延迟了11秒左右，于是我的问题变成了有没有这样一个工具能够做到对srt的时间轴做整体的修改。结果还真发现了这样一个简陋的在线工具：subtitle-sync-shifter 失望当我做完字幕，以为这一切都尘埃落定的时候，现实又教我做人了。我坐在沙发度过了愉快的前20分钟，画质清晰，体验与Netflix相差无几，然而在二十分钟后，字幕开始对不上画面，每一句台词都开始先于角色出现在银幕里。我意识到，之前那个国内资源分享群那个字幕应该还是有其独到之处的，至少它花了时间帮你做了时间轴的校准…… 痛苦，好像我要想好好看一下这部剧只能靠字幕组的内嵌字幕版本了。然而筛选各种版本的熟肉也让人纠结，有些字幕组喜欢夹带各种奇怪的片头，或者把字幕做得很大占据过多空间，虽然如此，我没有责怪他们的意思，只是觉得这么多人在为了看电视剧这件简单的事情付出了很多努力，但这件事本身不应该变得这么困难。 结局最后我还是回到了一开始的方案，通过流媒体解锁让我的Netflix节点能够观看自制剧以外的剧集，尽管gf在之前那次不成功的观看过后已经打消了继续看下去的念头，但我收获了一点欣慰，至少以后她如果再想看个什么，我可以有个相对稳定可靠的选项来满足她的需求。","link":"/2022/02/10/a-fast-and-easy-way-to-create-subtitles-for-some-TV-series/"},{"title":"acme.sh的Verify error:Invalid response from报错","text":"之前在hostdare购入过一台VPS，速度一般，所以拿来做备胎，乱七八糟部了一些服务在上面，考虑到最低限度的安全，用acme给每个服务都手动生成了一遍证书，还挺麻烦的（当时因为一些原因，通配符证书没能用起来……）。 其中最常用的一个自用服务是freshrss，今天访问时突然发现证书过期了，按说acme是可以自动续期的。查了一下acme.sh.log，报了一条这个错误： 1[Mon Aug 24 00:09:56 CST 2020] yousite.xyz:Verify error:Invalid response from https://yousite.xyz/.well-known/acme-challenge/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx [*.*.*.*]: 404 说明acme是有在自动去更新证书的，但是到verify这一步时会通不过。查了一下，发现项目里面有一条issue：Verify error:Invalid response #132里有解答： 12345678910111213141516171819202122232425262728293031同样遇到这个问题，如果是nginx的话，一般是因为服务器拒绝访问，解决方法2个，都是为了获取访问权限：1.在include *.conf; 下方加入部分代码：server {listen 80;server_name yoursite.com www.yoursite.com;include *.conf; // 加入以下代码； location ^~ /.well-known/acme-challenge/ { default_type \"text/plain\"; root /home/wwwroot/yoursite; } location = /.well-known/acme-challenge/ { try_files $uri =404; } 2.在 yoursite.conf 中，把拒绝访问代码注释掉，如下： # location ~ /\\. # { # deny all; # } 我的nginx把各服务的配置单独放在了新建的\\etc\\nginx\\conf\\conf.d\\xxx.conf，所以这里location部分要放到xxx.conf下，后续要做的就是重新加载nginx的配置： 12cd /etc/nginx/sbin./nginx -s reload 为了验证配置是否生效，这里更新了一下acme之后做了一次证书手动更新。 123cd ~/.acme.sh/acme.sh --upgradeacme.sh --renew -d domain.com 这次签发成功了，于是又水了一贴（部分信息做了脱敏处理）……","link":"/2020/08/24/acme-verify-error/"},{"title":"给自己VPS的新服务新增证书","text":"我已经忘记为啥我这个站没法生成通配符证书了，现在每加一个应用就得重新生成一遍，还是挺折腾的，很容易忘记。我还是先把这个过程记下来吧。 2022年1月7日更新： 关于当时没有选用通配符证书的原因好像隐约回忆起来了，似乎是因为通配符证书需要手动签发，没法自动续签。具体是因为我目前使用的场景有问题还是脚本有这个问题也还没有太确定。 关于下文中“che.xxx.xyz这个域名配置成我在/home/wwwroot/下布好的一个静态网页”这一描述，现在再读，感觉还是直接给出一个nginx的配置范例会比较清晰一些 12345678910111213141516#运行acme.sh --issue -d che.xxx.xyz --webroot /home/wwwroot/XXX 命令前，注释掉80端口转发的配置# server {# listen 80;# server_name che.xxx.xyz;# return 301 https://$host$request_uri; # }#取消注释用于签发证书的配置 server { listen 80; server_name che.xxx.xyz; root /home/wwwroot/XXX; location ^~ /.well-known/acme-challenge/ { default_type \"text/plain\"; } } 保存后运行./nginx -s reload令其生效，运行下方的acme.sh命令以签发证书 123acme.sh --issue -d che.xxx.xyz --webroot /home/wwwroot/XXXacme.sh --installcert -d che.xxx.xyz --keypath /data/che.xxx.xyz.key --fullchainpath /data/che.xxx.xyz.fc.cer --reloadcmd \"service nginx reload\" 完成签发后，在nginx配置新增配置，并注释掉之前用于签发证书的内容 1234567891011121314151617181920212223242526272829303132333435363738394041#新增https配置 server { listen 443 ssl http2; server_name che.xxx.xyz; ssl_certificate /data/che.xxx.xyz.fc.cer; ssl_certificate_key /data/che.xxx.xyz.key; location / { proxy_pass http://127.0.0.1:1234; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; } location ^~ /.well-known/acme-challenge/ { default_type \"text/plain\"; root /home/wwwroot/XXX; } location = /.well-known/acme-challenge/ { try_files $uri =404; } } #取消注释80端口的转发，令其生效 server { listen 80; server_name che.xxx.xyz; return 301 https://$host$request_uri; } #注释掉用于签发证书的配置，以便再次使用# server {# listen 80;# server_name che.xxx.xyz;# root /home/wwwroot/XXX;# location ^~ /.well-known/acme-challenge/ {# default_type \"text/plain\";# }# } 再次运行./nginx -s reload，令配置生效。 先去购买域名网站的配置页面那里给这次想使用的子域名che.xxx.xyz更新一条DNS记录，DNS更新大概15到20分钟左右时间。 这次加的是chevereto这个图床应用，直接用官网的docker-compose.yml改一下分配的端口号，之后通过docker-compose up -d进行安装。 这时候还只能通过ip加端口形式访问，所以需要在nginx中加配置，把che.xxx.xyz这个域名配置成我在/home/wwwroot/下布好的一个静态网页。然后重启nginx服务让配置生效，好像用restart或者reload都行。 之后要用到acme.sh了： 123acme.sh --issue -d che.xxx.xyz --webroot /home/wwwroot/XXXacme.sh --installcert -d che.xxx.xyz --keypath /data/che.xxx.xyz.key --fullchainpath /data/che.xxx.xyz.fc.cer --reloadcmd \"service nginx reload\" 这两个命令分别做了生成证书以及把证书安装到指定位置，这次做的时候我把第二步给忘了，是手动拷贝过去改名字的，所以拷错了文件，加载配置时报了PEM_read_bio_X509_AUX这个错。所以还是用脚本吧。 证书部分完成后就是重新修改nginx的配置，这次得按照正式使用的场景进行修改，改完后还是同样需要让新配置生效。 nginx生效后，就可以通过https访问了。 后记：其实图床这个事情也和我搭静态博客的想法或者说理念有点冲突，实际是有人拿github直接做图床的，想了想还是不大好意思这么做。","link":"/2022/01/07/add-https-for-new-web-service-on-vps/"},{"title":"抖音自动点赞","text":"因为一些主播会把点赞达到多少万作为一项指标，自己又懒得点，所以想把这个工作给自动化。 现在可以搜到的实现基本都是基于adb的，这是一个简陋的整合了相关资料的win下的教学。 其原理为：直接使用adb的点击事件速度会不够快，可以通过记录用户操作再输出的方式模拟在dy主播界面快速点击的行为。 下载一个安卓模拟器（本文使用夜神模拟器）并安装，完成安装后在模拟器内安装dy，登录已经关注主播的抖音账号，并进入直播页面 通过命令行进入nox_adb.exe所在目录（命令为默认安装位置）：cd “C:\\Program Files (x86)\\Nox\\bin\" 进入夜神模拟器的adb shell：nox_adb shell 进入shell后，准备记录输入操作到一个新建的recordtap文件内：dd if=/dev/input/event5 of=/sdcard/recordtap，具体是event5或其他（如event1等）可在shell中通过getevent命令查询 回到模拟器的直播页面，在屏幕上重复快速点击 退出adb shell（如快捷键无效，可关掉命令行窗口后重开） 重新进入adb shell，直接写成一个死循环，运行命令： i=1; while [ i -gt 0 ]; do dd if=/sdcard/recordtap of=/dev/input/event5;sleep 5; done 多开时直接执行nox_adb shell会报 error: more than one device and emulator，这时需要先nox_adb devices查看当前有设备与模拟器： C:\\Program Files (x86)\\Nox\\bin&gt;nox_adb devices List of devices attached 127.0.0.1:62025 device 127.0.0.1:62001 device 在执行adb命令时，为命令指定设备的序列号nox_adb -s 127.0.0.1:62025 shell 说明： 使用夜神安卓模拟器的ADB指令时，需要将adb改为nox_adb，如nox_adb devices对应adb devices，nox_adb shell对应adb shell。 参考： https://www.jianshu.com/p/7c565eab821d https://blog.csdn.net/gaojinshan/article/details/9455193 https://www.yeshen.com/faqs/ByPpRoflZ","link":"/2020/11/16/douyin-auto-thumbup/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2018/05/23/hello-world/"},{"title":"如何解决智冠版天龙八部等繁体Windows老游戏在Win10下的乱码问题","text":"这个问题早已有之，早期的解决方案是安装AppLocale等软件进行转码，但上述软件目前在Win10环境下基本全部失效。 以智冠版天龙八部为例，在目前可以搜索到的相关资源贴中给出了两种解决方案： 方案一：修改配置文件，并“把XP到WIN10区域与语言切换到繁体” 方案二：使用游戏转码大师（见下图） 1234567方案一在每次玩游戏时都需要修改区域与语言，相当麻烦。方案二则有两个问题：一、这个软件年久失修，目前已经很难鉴别网络上可下载的版本中哪个是可靠的；二、笔者下载了诸多版本，在目前的Win10环境统统会报毒，于是没有再继续通过虚拟机或者沙盒尝试使用了，有兴趣的朋友可以试下。 因此这里介绍一个新的解决方案给有老Windows游戏游玩需求却又苦于乱码问题的玩家：使用Locale Emulater。 根据介绍，这个工具开发的目的主要是为了解决日文AVG在中文环境下游玩的乱码问题，但经本人实测对繁中版游戏的乱码问题也能完美解决。 该软件完成安装后，会在右键菜单中添加Locale Emulater选项，使用方式为右键游戏程序，在菜单中以此点击“Locale Emulater”、“修改此程序的配置”，会弹出下方窗口。 对繁中游戏，调整“预置配置”与“时区”即可，保存后可以通过“建立快捷方式”，将调整配置后的快捷方式生成到桌面，便于下次调用。 实测截图如下，Win10下可正常显示智冠版天龙八部，开始畅玩吧！","link":"/2020/12/08/how-to-solve-the-traditional-chinese-garbled-code-problem-of-old-windows-games/"},{"title":"Hyper-V使用记录","text":"更新：好消息是蓝叠出了兼容Hyper-V的版本，坏消息是这个版本在我的电脑上没用起来。 0. 起因终于对自己一直使用的旧笔记本到了忍无可忍的地步，于是今年3月份在做了各种调研后购入了新机器（Lenove S740, i5 16G版本）。装机过程中我为了偷懒，打算直接用Win10自带的Hyper-V。自己打的如意算盘是可以省得装其他虚拟机软件，也能试一试好不好用。 首先，因为需要一个Win环境的虚拟机去跑一些国产流氓软件（比如长年在后台挂一个QQProtect进程的QQ），所以我考虑新建一个LTSC版本的Win10虚拟机。 1这里有一点需要注意的是：Hyper-V给了第一代和第二代两种机器的选择。如果想传文件到第一代机器的虚拟机里，一种方法是通过设置局域网的共享文件夹，另一种好像是通过给虚拟机在硬盘上分一片虚拟硬盘的分区，两种方法都需要进行一些相对繁琐的操作和设置。所以除非需要用一些旧式驱动，一般用第二代机器就可以，因为二代机器支持增强对话，拷贝文件会比较方便且节省时间。 1. 第一个坑一般情况下我们装系统到新建的虚拟机，都是通过虚拟的DVD光驱加载从网上下载得到的镜像文件（ISO、DMG等）进行安装。只要在建虚拟机时勾选上使用镜像安装的选项并选好镜像，Hyper-V就会自动把DVD设备的启动顺序放在第一位（其他虚拟机软件VMWare/VirtualBox一般也是这样）。但是在实际安装最新版本的Win10 LTSC时，Hyper-V不是直接进入安装界面，而是显示提示内容如下的页面：1scsi dvd the boot loader failed 这说明通过DVD启动失败，没法进入镜像的安装界面。但本来这个DVD光驱就是一个虚拟设备，正常来说是不会有问题的。 google了半天才知道这里需要在虚拟机开机的时候用最快的速度按enter键才能进入系统安装界面（你也可以在开机时多按几次enter）。VMWare这一步是直接就进去了…… 2. 第二个坑除了需要一个隔离环境运行一些流氓软件，我还有一个需求就是用安卓模拟器看青你或者看口袋48直播。因为现在爱奇艺网站必须注册才能看它提供的所谓的“720P”的视频源，非常恶心，为了看这个“720P”只能采用通过模拟器到APP里去看。如果打开了Hyper-V功能，诸如雷电、蓝叠、mumu这类模拟器会无法使用。因为现在市面几乎所有安卓模拟器本质上都是VitrualBox架构的虚拟机，而VitrualBox会和Hyper-V冲突。这些软件一般也会被在自己的使用说明里提到要在Win下关闭Hyper-V才能正常使用。 那打开Hyper-V功能后就没法在机器上开一个安卓模拟器了吗？也是有替代方案的。要想在Hyper-V下同时使用安卓模拟器可以参考“使用 Windows Hypervisor Platform 配置虚拟机加速”。这个方案是通过安装Android Studio(国内需要改hosts），使用IDE自带的模拟器去模拟。实测下来Android Studio的这个开发用模拟器是可以在打开Hyper-V的同时运行的，显示效果和流畅度也不错，但很非常吃配置。S740运行过程中CPU占用率一直是100%，这意味着不到一分钟机器就要开始产生大量发热和噪声。可能更高配置的机器可以使用这个兼容方案，但在我这里这个方案宣告失败。 3. 第三个坑（严格说不是Hyper-V的锅）另一种方案是Hyper-V上装Android-x86的虚拟机。这一方案看上去很美好，但会碰到一些Android编译与开发环境的问题，难到了没有安卓经验的我。在安装镜像过程中，android-x86.org上的镜像基本上都试了个遍，有些镜像会出现键盘失效的情况，有些镜像能够正常安装，但安装完手机QQ或者微信并打开的时候，这些应用就一直弹停止提示，无法正常运行。google了下可能是由于大多数版本的Android-x86镜像基本不自带houdini的问题，导致微信、qq、口袋这些应用没法正常使用。 实在有点懒得继续再折腾。后来还试了试Win下的docker desktop，很流畅，但感觉用的人还是偏少，如果只是用来学习，应该还是基于Linux环境的讨论会比较多。 4. 小结说了这么多，我最后把Hyper-V关了，去装了一个VMWare。","link":"/2020/03/31/hyper-v-sucks/"},{"title":"使用WARP脚本为Bandwagonhost VPS添加IPv4/IPv6网络","text":"2022-11-14 09:07更新： 之前安装的WARP失效了，重装VPS系统后再次运行一把梭脚本，无法正常使用（应该是因为无法获取IP），因此使用了warp-go的相关脚本配置IPv4/IPv6网络: wget -N https://raw.githubusercontent.com/fscarmen/warp/main/warp-go.sh &amp;&amp; bash warp-go.sh d 2022-01-27 15:55： 大部分的VPS不是原生IP，在Netfilx上无法观看breaking bad这类非自制剧。 并且随着使用时间的增长，很容易被Google认定为机器人，从此每次使用Google时都会跳出烦人的验证码。因此使用WARP是很有必要的。 因为现在有方便的一把梭脚本，正常来讲新的空白机器想要解锁可以直接执行： bash &lt;(curl -fsSL git.io/warp.sh) d 问题然而我目前使用的Hostdare服务器(年付$34.49的Premium China Optimized KVM VPS，中途换过一次IP)实际跑一把梭脚本时会在运行到starting wireguard时卡住，由于我懒得排查具体是什么原因（操作系统版本？还是服务器的一些未知原因？），且服务器上也部署了很多docker容器，因此也无法轻易地重装系统。所以决定干脆试试另一个解锁教程的方案：WARP socks5 client分流。 另外，我在按照该解锁方案实操时，使用另一一键WARP脚本安装warp socks5 client出现了无法安装的情况。 为了解决上述两个问题，我简单调整了该解锁方案的执行步骤：将warp socks5 client安装的步骤调整为用一把梭脚本安装，之后的步骤实际上和教程完全一样了，但还是完整地记录一下供Hostdare用户参考： 过程安装WARP socks5 client执行： bash &lt;(curl -fsSL git.io/warp.sh) menu 进入菜单后，选择相关选项安装warp linux client。 刷可使用IP完成上一步的安装后，执行： wget -N https://cdn.jsdelivr.net/gh/fscarmen/warp/menu.sh &amp;&amp; bash menu.sh 选择选项5：“更换支持Netflix的IP”，刷到可使用的IP。 修改配置文件实现分流执行vim /etc/v2ray/config.json修改v2ray配置文件的outbounds和routing部分为： 123456789101112131415161718192021222324252627282930\"outbounds\": [ { \"protocol\": \"freedom\" }, { \"tag\": \"media-unlock\", \"protocol\": \"socks\", \"settings\": { \"servers\": [ { \"address\": \"127.0.0.1\", \"port\": 40000, \"users\": [] } ] } }], \"routing\": { \"domainStrategy\": \"AsIs\", \"rules\": [ { \"type\": \"field\", \"domain\": [ \"geosite:netflix\" ], \"outboundTag\": \"media-unlock\" } ]}修改后执行： sudo systemctl restart v2ray 重启v2ray使配置生效。 补充这种方法解锁的机器在执行流媒体检测时，结果仍然会显示非原生IP，但实际观看时不受影响。","link":"/2022/11/14/install-warp-on-hostdare-vps/"},{"title":"新冠病毒是否真的会引起睾丸纤维化？","text":"这样一个看似非常离谱的问题，近期却实实在在地在网络上流传： 背景近日来，由于上海日新增感染数一直居高不下，围绕目前主要传播的Omicron毒株对人体危害的讨论也在网络上如火如荼地展开。许多网友在看到这条消息后，更加坚定了当前传播的主流毒株仍可能引发严重后遗症的看法。睾丸纤维化也因此成为了这些网友用于渲染新冠后遗症危害的论据之一。 尽管这一说法经过传播后开始为相当数量的网友所接受，但也有网友提出了质疑，认为睾丸纤维化的主要症状为局部疼痛及硬化，而精液之所以粘稠的原因在于精囊产生的粘液，精囊的位置距离睾丸又有相当距离，因此该评论可信度并不高。 一次小小的调查新冠病毒是否真的会引起睾丸纤维化？或者说新冠病毒是否真的会对睾丸造成相当程度的损伤？出于好奇，我通过搜索引擎查阅了一些资料，虽然未能发现睾丸纤维化的相关结果，但却发现早在今年二月，国内的观察者网等多家媒体就曾报道过这样一条新闻12： 1综合香港电台、《星岛日报》等媒体2月20日报道，香港大学微生物学系研究发现，新冠病毒可能会造成男性患者性腺机能减退及生育能力降，患者康复后依然受到影响。研究结果已被接纳在医学期刊《临床传染病》发表。香港大学（港大）微生物学系团队的研究发现，仓鼠即被中量的新冠病毒 （SARS-CoV-2）感染，也会出现急性睪丸损伤，慢性睪丸萎缩和血清内的睪丸酮下降。此前，据研究记载，部分新冠肺患者有睪丸疼痛的情况，一项针对新冠肺炎男性死者的尸检也显示出现了睪丸炎的症状。 12345袁国勇团队在仓鼠中进行了实验，用流感病毒H1N1感染做对照，新冠病毒和流感病毒通过鼻内感染和直接睾丸感染，都会导致仓鼠患上自性肺炎。但即使只是通过鼻内感染新冠病毒，仓鼠的精子数量和睾酮在第4天到7天急剧下降，并出现睾丸萎缩、体积和重量减小。血清性激水平在感染后42至120天显著降低。睾丸中出现急性炎症、出血、曲细精管坏死和精子发生中断。从7到120天，睾丸组织的炎症、变性和坏持续存在，而且Omicron和Delta突变株的鼻内感染会引起类似的睾丸变化。但经鼻内或睾丸内给予流感病毒H1N1感染的仓鼠显示并未睾丸染或损伤。 有了论文3及实验数据的支撑，尽管“日本同学”的不幸与睾丸纤维化间的关联存在疑问，但新冠病毒会对睾丸造成损伤的说法却似乎并非危言耸听。然而同年3月31日，在Nature子刊Nature Reviews Urology的News &amp; Views栏目发表的一篇的文章对香港大学的这一研究成果提出了质疑4： 123The extent, duration and causes of alterations in the testes caused by SARS-CoV-2 are unclear. A new study hasdocumented the effects of SARS-CoV-2 infection on the testes of a golden Syrian hamster model; however, therelevance of these findings to non-severe human infection is questionable. Nature Reviews Urology这本刊物隶属于Nature Reviews系列，这个系列主要刊发临床医学、生命科学、自然科学三大科学的综述和评述类型文章，2021年影响因子14.432，JCR分区Q2。而港大本次研究成果发表的刊物Clinical Infectious Diseases则是有着近30年办刊历史的老牌期刊，2021年影响因子9.079，JCR分区Q1。 看起来这两本刊物都具备较高的可信度，但两篇文章的观点却相去甚远。并且由于我缺乏相关领域的知识，翻译水平也相对有限，调查到此时已感到比较吃力。在机翻的帮助下，我还是罗列了”Is SARS-CoV-2-induced testicular damage in hamsters relevant?”一文围绕港大实验的部分质疑供大家参考： 在1dpi时精子明显减少（P = 0.0027），这是令人惊讶的早期现象，不能说明睾丸的影响。（仓鼠的睾丸精子通过附睾需要15天，精子生成需要40天）。在4dpi的附睾除了一些浸润外，没有受到大规模的影响。 Li等人在睾丸中寻找SARS-CoV-2感染的证据。与肺部相反，SARS-CoV-2的RNA在鼻内感染后在睾丸中几乎检测不到，而且只有非常少的细胞携带病毒N蛋白。在两种动物中，睾丸内注射SARS-CoV-2仅在1dpi时诱发了非常短暂和微弱的复制。 在另一项仓鼠研究中，SARS-CoV-2 RNA在鼻内接种后（有些动物长达28天）在睾丸中被暂时检测到，但没有组织病理学变化，这支持了病毒缺乏直接影响的说法。 在Li和同事的研究中，没有测量促性腺激素和炎症标志物的水平，而这些标志物本可以帮助破译睾丸功能改变的根源。除了提到自限性肺部感染外，作者没有提供关于他们的动物在感染SARS-CoV-2后的一般炎症水平的细节，这是睾丸衰竭的潜在驱动因素。 与SARS-CoV-2感染相关的血管病变，加上高水平的全身性炎症，才可能是导致急性睾丸炎和随后的慢性损害的原因。尽管有自限性的肺部感染，但考虑到对睾丸形态的巨大影响，仓鼠模型并不能反映男性的轻度或中度感染。 在文章的最后，作者认为Li等人对SARS-CoV-2感染仓鼠睾丸的研究结果表明，这种动物模型不适合研究SARS-CoV-2对轻度至中度患者睾丸功能的影响及其病因。迫切需要在其他模型中进一步研究，以解读SARS-CoV-2感染对这些患者的睾丸内分泌和外分泌功能的影响。 尾声借助网络的力量，我的调查到这里基本上告一段落。 新冠睾丸后遗症是否确有其事？我们究竟需不需要对这一后遗症感到恐慌？我认为，至少从目前看来，有关该课题的研究还存在着许多疑问未能得到解答，因此并不适合直接下结论，也不适合在此基础上添油加醋，过分渲染。人们仍应当坚持实事求是，以科学的态度对待疾病，从而树立起战胜疾病的信心。 本文成文仓促，限于个人水平，文中错误在所难免。恳请广大读者不吝赐教，予以指正，谢谢！","link":"/2022/04/13/is-it-true-that-syndrome-coronavirus-2-can-cause-post-testicular-fibrosis-sequelae/"},{"title":"聊聊Yoga S740","text":"后续：相当离谱，联想售后工程师在联想内部知识库找不到的触摸板驱动，我在联想美国官网找到了，虽然当时他们非说是免驱版（包括我自己查了一些联想国内官网的说明也说触摸板是免驱，但实际上这个美国官网的触摸板驱动装完后我的触摸板就好了……） 在没有考虑换机之前，我手上服役的机器还是一台13年购买的Dell Vostro系列。这台机器的硬盘、风扇甚至于键盘C面和D壳都已经被我换了个遍，可能就还剩屏幕没有动过。以为修修补补还可以坚持一段时间，但在数不清是第几次漏电之后，我终于还是受不了了。 决定购机之后，我开始分析自己的需求，大体有以下几点： 能做中度的视频剪辑和渲染 可以玩得动文明6或者欧陆风云4 内存16G，便于开虚拟机；硬盘512G起步 屏幕大小在14寸以内，厚度小于2cm 可以180度开合 接口不能太简陋，得基本够用 较长的续航 不要太贵（笑 …… 1中度的视频剪辑和游戏都对CPU有一定要求，不能太菜了，不然每次还得开远程连家里的电脑做剪辑，太麻烦。内存16G是为了能多开几个虚拟机。14寸以内也基本限定只能在轻薄本里挑。180度开合算是我个人一个喜好吧，我觉得这样摊开之后插显示器比较方便。 当时只是在脑海里粗略地列了一下，但基本是冲着这个方向去选机的。其实现在想想十分后悔，应该直接换Macbook Pro，本来Win系列本也已经用到有点吐了，但最后还是没有走出这一步，果然还是穷。 在各种奇奇怪怪的要求的引导下走进我视野的就是这台S740了。各种测评都有提到它的各种优点： 3733Mhz的板载LPDDR4X内存，算是当前市面上笔记本所使用的最高频内存了 一块DC调光、72%NTSC、400nits的屏幕，素质相当好，并且这块屏是LTPS的低功耗屏，搭配62Wh的大容量电池，续航表现很不错 使用10代CPU，性能释放表现好 满血雷电3接口，WiFi6无线网卡 那么实际上这台机器有没有各种测评说的这么好呢。从我自己的实际使用感受来看，这些优点是基本属实的。但这不意味着这台机器没有缺点了，事实上这台机器的缺点还不少： 首先，很不能让人忍受一点的就是这台机器的C面非常的尖锐，握持起来很不舒服。其次，机器的键盘手感并没有一些测评里吹的那么好，虽然不算特别差，但击键的时候有时会出现卡键的情况。另外这台机器的接口布局也不很合理，右边单独放了一个孤零零的USB，左边把电源口，雷电3接口，USB口和耳机口一股脑儿放在一起，使用时很拥挤。只配一个Type-C接口也显得很小气，多配一个把电源口砍掉不好么。 没有指纹解锁也是让人很费解的，我个人并不喜欢面部解锁，但因为这个原因也不得不用。 在7月份左右的时候，掉盘了。虽然这台机器的SSD表现其实还是挺不错的，但这么快就掉盘实在是出乎我的意料。没办法，只能联系联想上门维修。其实就是想着找它们免费换块盘。 等来了工程师上门，换完硬盘重装了系统，发现触摸板又不工作了……一般这种情况我们都会想着去找驱动装上，结果联想自己的官网上找不到相关的驱动。这位联想工程师联系了自己的同事，说这款机器触摸板是免驱的，装上系统就能使用。结果他自己带来的系统又怎么装都不行……最后这位小哥问我之前的一次重装时用的是什么镜像，说要不你自己重装试试。弄得我也无语了…… 后来的解决方案是把我的机器拿回了维修站，重装了一次出厂系统。触摸板的问题总算解决了。但给我的感受就是联想内部管理挺混乱，虽然看起来他们自己有做移动端的知识库系统，但对自己新推的新机型的支持明显滞后。包括一开始这位工程师想用PE进去机器看一看硬盘情况，结果发现自己的PE在这台机器上无法使用，换了好几套才进去，也给人感觉对新机型不熟悉。这次售后算是解决了问题，但体验还是很糟糕的。包括这台机器本身也给人一种不安定感。 现在我也还在坚持用这台机器，因为这些缺点的存在，抵消了我对它优点的好感。用起来总是觉得不怎么舒服。并且因为触摸板的缘故，我现在只能继续用工作站重装的Win10家庭版，实在是痛苦。现在看来，最大的感悟可能就是：下次换机我不会再想着省钱了。","link":"/2020/09/04/lenovo-yoga-s740-review/"},{"title":"使用用户脚本将Flash播放器替换为HTML5播放器","text":"做这个东西的动机其实是为了刷48的公演直播，本来一直在b站上看是没有问题的。但看这个月的n队N.E.W公演的那天，b站不知为何没有直播源了…… 也来不及搞清楚没有源这个事情是不是又是丝芭想搞闭环，总之当时除了模拟器登口袋，好像电脑上刷直播的方法就只剩在live.48.cn上看。 然后live48不出意料地还在用flash，我的火狐进去之后就是一块白板。虽然最后临时用CentBrowser刷了一下公演，但毕竟不是我的主力浏览器，刷完之后就莫名地感觉不爽…… 扒了扒greasefork，这方面脚本还是比较多的。找了一个用了dplayer的脚本dilidili flash to html5 fix开始抄。抄的过程中就感觉：如果只考虑满足最基本的需求，基本上还在使用Flash播放器的视频站都可以采用这个思路通过加载用户脚本做h5播放器的替换。 开始： 在head或者body加载dplayer的类库和hls的类库。 触发window.onload后，清空原播放器div下的子元素，append一个新div进去用于新播放器的使用。 写一个dplayer的构造函数，配好从原页面提取的视频url、视频类型为hls等配置项即可。 最后的结果可见live48 html5 player。","link":"/2019/04/29/replace-the-flash-player-with-an-HTML5-player/"},{"title":"restic使用onedrive的贴士","text":"太长不看版：推荐使用restic提供的offical binary自己编译。 我们在通过docker使用Bitwarden之类的应用时，一般会把它的数据库等等文件挂在到本地的一个位置，这时候可以通过restic来备份VPS上的这部分数据到网盘，既有加密又有快照恢复，使用resitc就是看中了这些功能。 但在使用过程中也还是不出意外地出现了各种问题，这里记录一个我自己最开始碰到的：我希望通过restic将挂载出来数据备份到我自己的onedrive里。现在restic的onedrive备份需要通过rclone。rclone连接onedrive是没有问题的,但在执行restic -r rclone:onedrive:Backup init（onedrive、Backup分别为我自定义的remote和folder名）时会报Fatal: create repository at rclone:onedrive:Backup failed: invalid backend错误。 如果这是一个invalid的backend，那么说明我们rclone的连接有问题，rclone lsd: onedrive应该是不能正常显示目录结构的，但实际经过测试没有发生这个情况。 最后爬restic的论坛发现了同样问题的一个讨论贴：restic-with-rclone。solution的这位老兄为了解答还去搜了源码，发现如果确实是restic -r rclone:onedrive:Backup init这个命令的形式，执行时会无法通过打印”invalid backend”的这条报错信息的判断条件，所以当前版本执行这一命令不会出现问题，有可能是restic版本过时。 两相对照后，我发现我当时也是无脑apt-get install resitc了，没有考虑到现在VPS上的系统版本是UBuntu的LTS版本。导致我在VPS安装的restic的这个版本是0.8.3，而根据讨论贴里的信息，restic在0.9.0版本里才加入rclone支持。 因此需要重装一下restic，我的步骤是先根据go主页的Download and install安装好go环境，之后再通过wget https://github.com/restic/restic/releases/download/v0.12.0/restic-0.12.0.tar.gz下载官方的包，解压后再执行make去编译。编译完成后生成的可执行的restic文件就可以正常使用了。 如果需要配置定时任务，可以用crontab或者systemd。crontab的话可以先把RESTIC_PASSWORD=\"here is your password\"加到~/.bashrc或者~/etc/profile里，之后在crontab -e添加任务配置：10 4 * * * . ~/.bashrc; /home/user/restic-0.12.0/restic -r rclone:onedrivedb:Backup backup /home/user/data; /home/user/restic-0.12.0/restic forget -q --prune --keep-hourly 24 --keep-daily 7","link":"/2021/03/30/restic-onedrive-tip/"},{"title":"我搭静态博客","text":"动态博客其实一直以来都很吸引我。事实上不久之前，我还在自己的VPS上搭建了最近比较火的halo。域名、证书签发、反代的配置等等都做好了。但经过一系列的折腾，最后还是回来重新使用github page。 做出这个决定有一个重要的理由——动态博客真的贵：好的域名需要钱，线路流畅的VPS也需要钱。廉价VPS服务商的线路一言难尽，我的目的也仅止于记录自己的一些想法和兴趣，不会有更大的野心。因此权衡下来我更倾向于选择一个具有性价比的方案。 话虽如此，并不代表静态博客就完美无缺。相反，一些在动态博客中根本不能称之为问题的问题，在静态博客上就得通过各种“奇技淫巧”来解决。 因此本文基于hexo聊一聊在搭建过程中需要注意的点，同类型的生成器如pelican在使用中基本上围绕的也都是这些问题。 自动化部署现在流行的做法通过Travis CI自动部署github page，基本上都遵循如下步骤： 新建一个username.github.io仓库，在github的Settings - Developer settings - Personal access tokens页面内为Travis CI新建一个github page专用，并赋予repo权限的access token； 使用github账号登陆Travis CI以完成账号关联，将access token作为GH_TOKEN加入到从github同步过去的仓库配置中，并在Travis CI中启用该仓库。 在本地安装npm、hexo。初始化hexo项目后，为本地项目添加.travis.yml，并完成_config.yml、.gitignore等相关配置； 为username.github.io新建一个source分支，将本地项目推送到这个source分支下。最终目的是让Travis CI根据source分支下.travis.yml中的设置的步骤生成静态文件，并把静态文件推送到username.github.io的master分支下。 这部分的教程其实相当多了，如1。在实际搭建时，可以根据自己的情况进行调整，并不需要照搬教程。 主题开发如果你使用了比较成熟的主题，但又希望做一些个性化的定制，比较好的一种方式是把这个主题fork到自己的github账号下。并在本地环境中拉取fork的主题。这样做之后，本地的开发环境将会有两个仓库： username.github.io的source分支 hexo-theme-themename的master分支 由于主题是一个独立分支，因此在自动部署时，一般会把source下的themes文件夹加入到这个分支的.gitignore里去，避免发生一些可能的修改冲突。 使用时，则通过在.travis.yml添加git clone命令引入主题并渲染，例如： 1234567before_script: - npm install -g hexo-cli - mkdir themes - git clone https://github.com/username/hexo-theme-themename.git themes/themenamescript: - hexo generate 评论服务选型对动态博客来说几乎属于标配的评论功能，在静态博客上就得通过各种奇奇怪怪的方案去实现，并且往往还并不完美。我目前使用的主题minos支持的几种评论服务，就各自存在一些缺点： disqus国内网络环境下的访问实在是太慢了，非常影响浏览体验。 一种方式是把disqus隐藏在一个按钮中，相当于用户只有在点击该评论按钮后才会加载disqus，属于一个治标不治本的方案。 如果坚持使用disqus，可以考虑参考2，但我个人感觉还是会有拖慢。 gitment/gitalk单独为这类评论服务建一个存放issue仓库倒还不是最麻烦的地方，最麻烦的是每篇博文好像都得手动加issue，虽然github也有网友写了脚本完成这一工作，但易用性还是大大降低了。 另外gitment已经停止更新，一些常见问题如object XMLHttpRequestProgressEvent、hexo上的开启失败等只能通过网友提供的各种方案加以解决，这一点也十分劝退我。 isso使用体验最好的一个，但并没有选用他。这实际上涉及的是一个理念问题：isso需要自行搭建，也就是说又得放在VPS上，那为什么不直接选用一个自带评论的动态博客方案呢，和我搭静态博客的出发点相矛盾。当然，对于不介意这点的朋友，这个服务还是推荐的。 valine目前这个博客上部署的方案，没有上面一些比较恶心的问题。但leancloud这个服务能坚持多久是比较让我担心的地方…… 综上所述，可以看到静态博客的评论实在是一大痛点。虽然有各种各样的解决方案，但始终只能算马马虎虎能用，难以达到动态博客的使用体验。 搜索引擎收录及SEO优化目前google的网址前缀收录的推荐方式是通过校验html来完成，步骤可参考5，SEO优化方面的文章也很多，如6，这里就不再赘述了。 小结完成这些内容后，你的静态博客相当于拥有了基本的功能。后续包括全站多语言支持、图片懒加载等等，都是可以持续优化的方面。 当然，对于一个博客来说，最重要的永远是内容。希望大家不要被各种花俏的技巧蒙蔽了双眼，为了搭博客而搭博客。而是通过搭博客培养兴趣和动手能力，在兴趣驱动下，继续分享自己的思考与创意😁","link":"/2020/05/27/the-way-I-build-a-static-blog/"}],"tags":[{"name":"TV-Series","slug":"TV-Series","link":"/tags/TV-Series/"},{"name":"subtitle","slug":"subtitle","link":"/tags/subtitle/"},{"name":"VPS","slug":"VPS","link":"/tags/VPS/"},{"name":"android","slug":"android","link":"/tags/android/"},{"name":"RPG","slug":"RPG","link":"/tags/RPG/"},{"name":"Virtualization","slug":"Virtualization","link":"/tags/Virtualization/"},{"name":"Hyper-V","slug":"Hyper-V","link":"/tags/Hyper-V/"},{"name":"Covid-19","slug":"Covid-19","link":"/tags/Covid-19/"},{"name":"Laptop","slug":"Laptop","link":"/tags/Laptop/"},{"name":"Userscript","slug":"Userscript","link":"/tags/Userscript/"},{"name":"Hexo","slug":"Hexo","link":"/tags/Hexo/"}],"categories":[{"name":"Media","slug":"Media","link":"/categories/Media/"},{"name":"Coding","slug":"Coding","link":"/categories/Coding/"},{"name":"Game","slug":"Game","link":"/categories/Game/"},{"name":"Life","slug":"Life","link":"/categories/Life/"},{"name":"Digital","slug":"Digital","link":"/categories/Digital/"}]}