{"pages":[{"title":"关于","text":"站点日志2023-08-25 挺重要的一次更新，基本是内容的推到重来，只保留了比较有质量的文章。调整了博客的栏目和博文的组织形式，新增了hexo-neat、hexo-permalink-pinyin两个插件的使用。看不见的改动是通过调整把稍后读（剪藏）-笔记软件-博客的工作流捋得比较顺了，后续或许会聊聊具体的做法。2023-02-27 更新博客系统为giscus，后知后觉地将Travis CI替换为Github Actions。2022-11-22 修复主题字体、引用显示问题，依照规范修复md文件。2022-11-14 删减了一些博文，更专注记录平时解决的一些问题。2022-04-21 新增了一个本主题下如何使用blueimpgallery的示例。2022-01-19 加个统计。2021-12-13 把相册删了，因为我的图床挂了，而且感觉相册访问起来偏慢，影响了浏览体验（虽然也并不会有人看）。2021-09-18 差不多是最累的一次更新了，让主题适配了blueimpgallery，因为感觉原来那个相册插件不怎么好看。2020-05-26 调整minos配色及字体，欢迎fork这个版本。2020-05-25 评论服务选用Valine。生成并提交sitemap以完成收录。2020-05-24 完成初步搭建。主题使用minos，通过Travis CI完成自动化部署。","link":"/about/index.html"},{"title":"相册使用说明","text":"本博客主题在原minos主题上进行了一些改动，因此相册的显示效果与原主题有所不同。使用例配置文件12345678910111213141516171819202122232425262728293031favicon: /images/favicon.icomenu: Archives: /archives Categories: /categories Gallery: /gallery About: /aboutarticle: # Show word count and estimated reading time. readtime: true # Code highlight theme, please see https://highlightjs.org/static/demo/ highlight: atom-one-dark logo: text: mykonakonanavbar_links: RSS: icon: fas fa-rss url: https://mykonakona.github.io/atom.xmlsearch: type: insight# Other plugins and their settings.plugins: mathjax: true katex: false gallery: true clipboard: true相册页source下新建一../gallery/index.md文件，输入以下内容：1234567891011---layout: \"blueimpgallery\"comments: false---&lt;div id=\"links\" class=\"links\"&gt;&lt;a href=\"https://che.jakku.top/images/2021/09/17/IMG_20210808_174117.jpg\"&gt;&lt;img loading=\"lazy\" width=\"105\" height=\"105\" src=\"https://che.jakku.top/images/2021/09/17/IMG_20210808_174117.th.jpg\" alt=\"IMG_20210808_174117.th.jpg\" border=\"0\"&gt;&lt;/a&gt;&lt;a href=\"https://che.jakku.top/images/2021/09/17/IMG_20210808_174124.jpg\"&gt;&lt;img loading=\"lazy\" width=\"105\" height=\"105\" src=\"https://che.jakku.top/images/2021/09/17/IMG_20210808_174124.th.jpg\" alt=\"IMG_20210808_174124.th.jpg\" border=\"0\"&gt;&lt;/a&gt;&lt;a href=\"https://che.jakku.top/images/2021/09/17/IMG_20210808_174135.jpg\"&gt;&lt;img loading=\"lazy\" width=\"105\" height=\"105\" src=\"https://che.jakku.top/images/2021/09/17/IMG_20210808_174135.th.jpg\" alt=\"IMG_20210808_174135.th.jpg\" border=\"0\"&gt;&lt;/a&gt;&lt;a href=\"https://che.jakku.top/images/2021/09/17/IMG_20210808_174144.jpg\"&gt;&lt;img loading=\"lazy\" width=\"105\" height=\"105\" src=\"https://che.jakku.top/images/2021/09/17/IMG_20210808_174144.th.jpg\" alt=\"IMG_20210808_174144.th.jpg\" border=\"0\"&gt;&lt;/a&gt;&lt;/div&gt;效果","link":"/gallery/index.html"}],"posts":[{"title":"我搭静态博客\n","text":"动态博客其实一直以来都很吸引我。事实上不久之前，我还试图搭建了最近比较火的halo。域名、证书签发、反代的配置等等都做好了。但经过一系列的折腾，最后还是回来重新使用github page。做这个选择有个重要的理由——动态博客真的贵：好的域名需要钱，线路流畅的VPS也需要钱。廉价VPS服务商的线路一言难尽，反复的折腾让专注于记录本身变得困难。因此权衡下来我决定采用更具性价比的静态博客方案。话虽如此，并不代表静态博客就完美无缺。相反，一些在动态博客中根本不能称之为问题的问题，在静态博客上就得通过各种“奇技淫巧”来解决。因此本文基于hexo聊一聊在搭建过程中需要注意的点，同类型的生成器如pelican在使用中基本上围绕的也都是这些问题。自动化部署现在流行的做法通过Travis CI自动部署github page，基本上都遵循如下步骤：新建一个username.github.io仓库，在github的Settings - Developer settings - Personal access tokens页面内为Travis CI新建一个github page专用，并赋予repo权限的access token；使用github账号登陆Travis CI以完成账号关联，将access token作为GH_TOKEN加入到从github同步过去的仓库配置中，并在Travis CI中启用该仓库。在本地安装npm、hexo。初始化hexo项目后，为本地项目添加.travis.yml，并完成_config.yml、.gitignore等相关配置；为username.github.io新建一个source分支，将本地项目推送到这个source分支下。最终目的是让Travis CI根据source分支下.travis.yml中的设置的步骤生成静态文件，并把静态文件推送到username.github.io的master分支下。这部分的教程其实相当多了，如1。在实际搭建时，可以根据自己的情况进行调整，并不需要照搬教程。主题开发如果你使用了比较成熟的主题，但又希望做一些个性化的定制，比较好的一种方式是把这个主题fork到自己的github账号下。并在本地环境中拉取fork的主题。这样做之后，本地的开发环境将会有两个仓库：username.github.io的source分支hexo-theme-themename的master分支由于主题是一个独立分支，因此在自动部署时，一般会把source下的themes文件夹加入到这个分支的.gitignore里去，避免发生一些可能的修改冲突。使用时，则通过在.travis.yml添加git clone命令引入主题并渲染，例如：1234567before_script: - npm install -g hexo-cli - mkdir themes - git clone https://github.com/username/hexo-theme-themename.git themes/themenamescript: - hexo generate评论服务选型对动态博客来说几乎属于标配的评论功能，在静态博客上就得通过各种奇奇怪怪的方案去实现，并且往往还并不完美。我目前使用的主题minos支持的几种评论服务，就各自存在一些缺点：disqus国内网络环境下的访问实在是太慢了，非常影响浏览体验。一种方式是把disqus隐藏在一个按钮中，相当于用户只有在点击该评论按钮后才会加载disqus，属于一个治标不治本的方案。如果坚持使用disqus，可以考虑参考2，但我个人感觉还是会有拖慢。gitment/gitalk单独为这类评论服务建一个存放issue仓库倒还不是最麻烦的地方，最麻烦的是每篇博文好像都得手动加issue，虽然github也有网友写了脚本完成这一工作，但易用性还是大大降低了。另外gitment已经停止更新，一些常见问题如object XMLHttpRequestProgressEvent、hexo上的开启失败等只能通过网友提供的各种方案加以解决，这一点也十分劝退我。isso使用体验最好的一个，但并没有选用他。这实际上涉及的是一个理念问题：isso需要自行搭建，也就是说又得放在VPS上，那为什么不直接选用一个自带评论的动态博客方案呢，和我搭静态博客的出发点相矛盾。当然，对于不介意这点的朋友，这个服务还是推荐的。valine目前这个博客上部署的方案，没有上面一些比较恶心的问题。但leancloud这个服务能坚持多久是比较让我担心的地方……综上所述，可以看到静态博客的评论实在是一大痛点。虽然有各种各样的解决方案，但始终只能算马马虎虎能用，难以达到动态博客的使用体验。搜索引擎收录及SEO优化目前google的网址前缀收录的推荐方式是通过校验html来完成，步骤可参考5，SEO优化方面的文章也很多，如6，这里就不再赘述了。小结完成这些内容后，你的静态博客相当于拥有了基本的功能。后续包括全站多语言支持、图片懒加载等等，都是可以持续优化的方面。当然，对于一个博客来说，最重要的永远是内容。希望大家不要被各种花俏的技巧蒙蔽了双眼，为了搭博客而搭博客。而是通过搭博客培养兴趣和动手能力，在兴趣驱动下，继续分享自己的思考与创意😁","link":"/posts/2023/08-25-wo-da-jing-tai-bo-ke.html"},{"title":"联想Yoga S740的糟心体验\n","text":"在没有考虑换机之前，我手上服役的机器还是一台13年购买的Dell Vostro系列。这台机器的硬盘、风扇甚至于键盘C面和D壳都已经被我换了个遍，可能就还剩屏幕没有动过。以为修修补补还可以坚持一段时间，但这台机器开始出现漏电问题，终于让我萌生了换机想法。决定购机之后，我开始分析自己的需求，大体有以下几点：能做中度的视频剪辑和渲染可以玩得动文明6或者欧陆风云4内存16G，便于开虚拟机；硬盘512G起步屏幕大小在14寸以内，厚度小于2cm可以180度开合接口不能太简陋，得基本够用较长的续航不要太贵（笑……1中度的视频剪辑和游戏都对CPU有一定要求，不能太菜了，不然每次还得开远程连家里的电脑做剪辑，太麻烦。内存16G是为了能多开几个虚拟机。14寸以内也基本限定只能在轻薄本里挑。180度开合算是我个人一个喜好吧，我觉得这样摊开之后插显示器比较方便。当时只是在脑海里粗略地列了一下，但基本是冲着这个方向去选机的。其实现在想想十分后悔，应该直接换Macbook Pro，本来Win系列本也已经用到有点吐了，但最后还是没有走出这一步，果然还是穷。在各种奇奇怪怪的要求的引导下走进我视野的就是这台S740了。各种测评都有提到它的各种优点：3733Mhz的板载LPDDR4X内存，算是当前市面上笔记本所使用的最高频内存了一块DC调光、72%NTSC、400nits的屏幕，素质相当好，并且这块屏是LTPS的低功耗屏，搭配62Wh的大容量电池，续航表现很不错使用10代CPU，性能释放表现好满血雷电3接口，WiFi6无线网卡那么实际上这台机器有没有各种测评说的这么好呢。从我自己的实际使用感受来看，这些优点是基本属实的。但这不意味着这台机器没有缺点了，事实上这台机器的缺点还不少：首先，很不能让人忍受一点的就是这台机器的C面非常的尖锐，握持起来很不舒服。其次，机器的键盘手感并没有一些测评里吹的那么好，虽然不算特别差，但击键的时候有时会出现卡键的情况。另外这台机器的接口布局也不很合理，右边单独放了一个孤零零的USB，左边把电源口，雷电3接口，USB口和耳机口一股脑儿放在一起，使用时很拥挤。只配一个Type-C接口也显得很小气，多配一个把电源口砍掉不好么。没有指纹解锁也是让人很费解的，我个人并不喜欢面部解锁，但因为这个原因也不得不用。在7月份左右的时候，掉盘了。虽然这台机器的SSD表现其实还是挺不错的，但这么快就掉盘实在是出乎我的意料。没办法，只能联系联想上门维修。其实就是想着找它们免费换块盘。等来了工程师上门，换完硬盘重装了系统，发现触摸板又不工作了……一般这种情况我们都会想着去找驱动装上，结果联想自己的官网上找不到相关的驱动。这位联想工程师联系了自己的同事，说这款机器触摸板是免驱的，装上系统就能使用。结果他自己带来的系统又怎么装都不行……最后这位小哥问我之前的一次重装时用的是什么镜像，说要不你自己重装试试。弄得我也无语了……后来的解决方案是把我的机器拿回了维修站，重装了一次出厂系统。触摸板的问题总算解决了。但给我的感受就是联想内部管理挺混乱，虽然看起来他们自己有做移动端的知识库系统，但对自己新推的新机型的支持明显滞后。包括一开始这位工程师想用PE进去机器看一看硬盘情况，结果发现自己的PE在这台机器上无法使用，换了好几套才进去，也给人感觉对新机型不熟悉。这次售后算是解决了问题，但体验还是很糟糕的。包括这台机器本身也给人一种不安定感。现在我也还在坚持用这台机器，因为这些缺点的存在，抵消了我对它优点的好感。用起来总是觉得不怎么舒服。并且因为触摸板的缘故，我现在只能继续用工作站重装的Win10家庭版，实在是痛苦。现在看来，最大的感悟可能就是：下次换机我不会再想着省钱了。后续：相当离谱，联想售后工程师在联想内部知识库找不到的触摸板驱动，我在联想美国官网找到了，虽然当时他们非说是免驱版（包括我自己查了一些联想国内官网的说明也说触摸板是免驱，但实际上这个美国官网的触摸板驱动装完后我的触摸板就好了……）","link":"/posts/2023/08-25-lian-xiang-yoga-s740-de-zao-xin-ti-yan.html"},{"title":"一次失败的刷剧经历\n","text":"虽然很久不追剧了，但直到1202年的这个冬天我发现看个剧还是一件很难的事情。之前gf想看《机智医生生活》第一季，因为这部剧没有引进，我自己的VPS当时还没做解锁，Netfilx只能看自制。只能四处帮她找下载。找的过程中有一个感受：虽然追看韩剧的群体很庞大，但在国内看韩剧的体验实在不能算好。对这部剧，我个人觉得最方便省心地观看方式还是通过Netflix，无论是画质还是翻译质量都有相当保障。但是国内看Netflix有多难大家都知道了，不仅需要购买DRM认证的专用设备（电视或电视盒），还需要解决机场或VPS搭建以及流媒体解锁等问题。对于只是想单纯刷剧，不太具备相关计算机知识的网友，基本上无人能在这一套折腾下坚持到成功收看。大部分人还是只能指望字幕组大善人通过发布资源的方式看剧。字幕组发布的资源存在的一个最大问题就是画质。本身这种熟肉基本上都是内嵌字幕，注定要经过一轮压制，加上源本身可能不够高清，或者是考虑到小体积易于传播，所以画质会被压缩得更厉害。所以我一开始的思路想找一找外挂字幕，源则通过一些PT站的发布资源解决。果然PT上的资源画质相当不错，但另一个问题来了，外挂字幕有是有，但是和我下载的这个源匹配不上，这可如何是好。我研究了一下手头上搜到的几个外挂字幕，一个是某国内字幕组为这部剧制作的ass字幕，这个字幕如果在我的plex上播放，需要经过一轮转换。由于plex的先天不足，转换后播放的速度会变得极慢，所以如果要用这个字幕，需要先进行一步ass转srt的工作。但由于这个字幕使用了特殊字体和一些特效，导致转换后的srt效果很差，再加上这个字幕时间轴本来也和我手头这个源不大对得上，所以还是pass掉了这个字幕。第二个字幕是一个国内资源分享群发布的，惊喜地发现时间轴似乎是能对得上，但是前四集没有。完美主义发作下这个字幕也先搁置起来了。第三个字幕是在国外网站上发布的一个Netflix源的字幕，我发现这个字幕似乎与第二个字幕一模一样，内容上唯一不同的是Netflix的字幕会在结尾标上译者的名字，第二个字幕可能是不想别人发现自己是直接拿来的，所以把这个信息给抹了（笑）。开始感觉离成功有点近了。接下来要做的就是想办法怎么把时间轴对准确，但实在不想花太多时间用软件一个一个去校准。我大致对比了一下第三个字幕和第二个字幕，感觉第二个字幕有点像是把第三个字幕整体延迟了11秒左右。于是问题变成了有没有这样一个工具能够做到对srt的时间轴做整体的修改。结果还真发现了这样一个简陋的在线工具：subtitle-sync-shifter当我做完字幕，以为这一切都尘埃落定的时候，现实又教我做人了。我坐在沙发度过了愉快的前20分钟，画质清晰，体验与Netflix相差无几，然而在二十分钟后，字幕开始对不上画面，每一句台词都开始先于角色出现在银幕里。我意识到，之前那个国内资源分享群那个字幕应该还是有其独到之处的，至少它花了时间帮你做了时间轴的校准……痛苦，好像我要想好好看一下这部剧只能靠字幕组的内嵌字幕版本了。然而筛选各种版本的熟肉也让人纠结，有些字幕组喜欢夹带各种奇怪的片头，或者把字幕做得很大占据过多空间，虽然如此，我没有责怪他们的意思，只是觉得这么多人在为了看电视剧这件简单的事情付出了很多努力，但这件事本身不应该变得这么困难。最后我还是回到了一开始的方案，通过流媒体解锁让我的Netflix节点能够观看自制剧以外的剧集，尽管gf在之前那次不成功的观看过后已经打消了继续看下去的念头，但我收获了一点欣慰，至少以后她如果再想看个什么，我可以有个相对稳定可靠的选项来满足她的需求。","link":"/posts/2023/08-25-yi-ci-shi-bai-de-shua-ju-jing-li.html"},{"title":"miui.eu用户开启QQ邮箱IMAP报错的解决\n","text":"使用第三方客户端登录QQ邮箱或者163邮箱，都需要手动开启邮箱的IMAP。目前国内邮箱开启IMAP的做法是要求用户发一条指定内容的短信到指定号码进行验证，以获得腾讯或网易生成的授权码。背景我的163邮箱在这个环节可以正常发送、验证，但QQ邮箱通过密保手机发送短信时就会弹出如下提示：核对了多遍，也没有发现内容哪里有误疑惑通过QQ邮箱的反馈建议提交了一个工单上去，QQ对这个问题的答复是：你好，出现这种情况一般有可能：用户手机终端本身没有把这个短信成功发送出来，请检查自己的手机状态是否正常，建议： 1、致电运营商客服电话，询问是否被禁止了端口短信功能/增值业务 网关（也叫做SP开关）； 2、发送短信到备用接收号码重试； 3、发送短信时去掉+86重试发送； 4、确认是否有发送扣费记录，若扣费成功，请提供【扣费记录截图】、【发送短信手机号（密保手机号）】、【发送短信时间】给我们，若没有扣费成功，请联系运营商，感谢配合！第一点，肯定不可能，因为我的手机刚刚还在163邮箱那边成功打开了，应该不存在这个问题；第二点，实际测试了一下，也可以正常发送接收；第三点，看手机的短信页面，是不带86的；第四点，短信查询余额，确实有扣费。这时变得有点像在做一道选择题，需要选出错误的选项，但所有选项看起来都是对的。解决这时候只能回过头来看选项了，感觉最大的可能还是出在+86这里。于是去电信查询详单，号码确实有问题：但手机上是没有显示+86的，那一定是有某个设置自行进行了添加。在仔细观察后我注意到了手机上的这个配置：关掉这一选项并重新发送短信，验证正常通过。我想原因可能是因为在miui.eu上使用GSM alphabet这个选项的话，会先把号码拼接上+86后再做短信的发送，所以虽然发短信时手输的号码不带+86，但查询的结果显示是加上+86的。其他在解决的过程中，我也突然想到有没可能通过安装Foxmail客户端来开启IMAP，得到了一个很奇怪的结果：安装完成后进入默认的登录选项，会要求手动配置IMAP，这时输入框是无法填写的灰色：这很好理解，因为邮箱设置里IMAP也是没有开启的状态，不给登录也很正常。但是如果用QQ扫码登录，无需配置便可以正常通过Foxmail客户端使用邮箱。此时通过网页端查看，邮箱的IMAP设置依然是关闭的（但不知什么原因exchange设置好像给打开了）。","link":"/posts/2023/08-25-miui-eu-yong-hu-kai-qi-qq-you-xiang-imap-bao-cuo-de-jie-jue.html"}],"tags":[{"name":"静态博客","slug":"静态博客","link":"/tags/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/"},{"name":"Hexo","slug":"Hexo","link":"/tags/Hexo/"},{"name":"笔记本电脑","slug":"笔记本电脑","link":"/tags/%E7%AC%94%E8%AE%B0%E6%9C%AC%E7%94%B5%E8%84%91/"},{"name":"流媒体","slug":"流媒体","link":"/tags/%E6%B5%81%E5%AA%92%E4%BD%93/"},{"name":"数码","slug":"数码","link":"/tags/%E6%95%B0%E7%A0%81/"}],"categories":[]}